/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class Body : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Body(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Body obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Body() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletSoftBodyPINVOKE.delete_Body(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public Cluster m_soft {
    set {
      BulletSoftBodyPINVOKE.Body_m_soft_set(swigCPtr, Cluster.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.Body_m_soft_get(swigCPtr);
      Cluster ret = (cPtr == IntPtr.Zero) ? null : new Cluster(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btRigidBody m_rigid {
    set {
      BulletSoftBodyPINVOKE.Body_m_rigid_set(swigCPtr, SWIGTYPE_p_btRigidBody.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.Body_m_rigid_get(swigCPtr);
      SWIGTYPE_p_btRigidBody ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btRigidBody(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btCollisionObject m_collisionObject {
    set {
      BulletSoftBodyPINVOKE.Body_m_collisionObject_set(swigCPtr, SWIGTYPE_p_btCollisionObject.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.Body_m_collisionObject_get(swigCPtr);
      SWIGTYPE_p_btCollisionObject ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btCollisionObject(cPtr, false);
      return ret;
    } 
  }

  public Body() : this(BulletSoftBodyPINVOKE.new_Body__SWIG_0(), true) {
  }

  public Body(Cluster p) : this(BulletSoftBodyPINVOKE.new_Body__SWIG_1(Cluster.getCPtr(p)), true) {
  }

  public Body(SWIGTYPE_p_btCollisionObject colObj) : this(BulletSoftBodyPINVOKE.new_Body__SWIG_2(SWIGTYPE_p_btCollisionObject.getCPtr(colObj)), true) {
  }

  public void activate() {
    BulletSoftBodyPINVOKE.Body_activate(swigCPtr);
  }

  public SWIGTYPE_p_btMatrix3x3 invWorldInertia() {
    SWIGTYPE_p_btMatrix3x3 ret = new SWIGTYPE_p_btMatrix3x3(BulletSoftBodyPINVOKE.Body_invWorldInertia(swigCPtr), false);
    return ret;
  }

  public float invMass() {
    float ret = BulletSoftBodyPINVOKE.Body_invMass(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_btTransform xform() {
    SWIGTYPE_p_btTransform ret = new SWIGTYPE_p_btTransform(BulletSoftBodyPINVOKE.Body_xform(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_btVector3 linearVelocity() {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.Body_linearVelocity(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_btVector3 angularVelocity(SWIGTYPE_p_btVector3 rpos) {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.Body_angularVelocity__SWIG_0(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(rpos)), true);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_btVector3 angularVelocity() {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.Body_angularVelocity__SWIG_1(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_btVector3 velocity(SWIGTYPE_p_btVector3 rpos) {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.Body_velocity(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(rpos)), true);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void applyVImpulse(SWIGTYPE_p_btVector3 impulse, SWIGTYPE_p_btVector3 rpos) {
    BulletSoftBodyPINVOKE.Body_applyVImpulse(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(impulse), SWIGTYPE_p_btVector3.getCPtr(rpos));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void applyDImpulse(SWIGTYPE_p_btVector3 impulse, SWIGTYPE_p_btVector3 rpos) {
    BulletSoftBodyPINVOKE.Body_applyDImpulse(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(impulse), SWIGTYPE_p_btVector3.getCPtr(rpos));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void applyImpulse(Impulse impulse, SWIGTYPE_p_btVector3 rpos) {
    BulletSoftBodyPINVOKE.Body_applyImpulse(swigCPtr, Impulse.getCPtr(impulse), SWIGTYPE_p_btVector3.getCPtr(rpos));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void applyVAImpulse(SWIGTYPE_p_btVector3 impulse) {
    BulletSoftBodyPINVOKE.Body_applyVAImpulse(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(impulse));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void applyDAImpulse(SWIGTYPE_p_btVector3 impulse) {
    BulletSoftBodyPINVOKE.Body_applyDAImpulse(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(impulse));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void applyAImpulse(Impulse impulse) {
    BulletSoftBodyPINVOKE.Body_applyAImpulse(swigCPtr, Impulse.getCPtr(impulse));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void applyDCImpulse(SWIGTYPE_p_btVector3 impulse) {
    BulletSoftBodyPINVOKE.Body_applyDCImpulse(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(impulse));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
