/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btSoftBody : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btSoftBody(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(btSoftBody obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btSoftBody() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletSoftBodyPINVOKE.delete_btSoftBody(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btCollisionObject_const_p_t m_collisionDisabledObjects {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_collisionDisabledObjects_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btCollisionObject_const_p_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_collisionDisabledObjects_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_btCollisionObject_const_p_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btCollisionObject_const_p_t(cPtr, false);
      return ret;
    } 
  }

  public btSoftBodySolver m_softBodySolver {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_softBodySolver_set(swigCPtr, btSoftBodySolver.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_softBodySolver_get(swigCPtr);
      btSoftBodySolver ret = (cPtr == IntPtr.Zero) ? null : new btSoftBodySolver(cPtr, false);
      return ret;
    } 
  }

  public Config m_cfg {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_cfg_set(swigCPtr, Config.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_cfg_get(swigCPtr);
      Config ret = (cPtr == IntPtr.Zero) ? null : new Config(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btSoftBody__SolverState m_sst {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_sst_set(swigCPtr, SWIGTYPE_p_btSoftBody__SolverState.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_sst_get(swigCPtr);
      SWIGTYPE_p_btSoftBody__SolverState ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btSoftBody__SolverState(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btSoftBody__Pose m_pose {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_pose_set(swigCPtr, SWIGTYPE_p_btSoftBody__Pose.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_pose_get(swigCPtr);
      SWIGTYPE_p_btSoftBody__Pose ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btSoftBody__Pose(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_void m_tag {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_tag_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_tag_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public btSoftBodyWorldInfo m_worldInfo {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_worldInfo_set(swigCPtr, btSoftBodyWorldInfo.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_worldInfo_get(swigCPtr);
      btSoftBodyWorldInfo ret = (cPtr == IntPtr.Zero) ? null : new btSoftBodyWorldInfo(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t m_notes {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_notes_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_notes_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t(cPtr, false);
      return ret;
    } 
  }

  public btAlignedObjectArrayNode m_nodes {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_nodes_set(swigCPtr, btAlignedObjectArrayNode.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_nodes_get(swigCPtr);
      btAlignedObjectArrayNode ret = (cPtr == IntPtr.Zero) ? null : new btAlignedObjectArrayNode(cPtr, false);
      return ret;
    } 
  }

  public btAlignedObjectArrayLink m_links {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_links_set(swigCPtr, btAlignedObjectArrayLink.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_links_get(swigCPtr);
      btAlignedObjectArrayLink ret = (cPtr == IntPtr.Zero) ? null : new btAlignedObjectArrayLink(cPtr, false);
      return ret;
    } 
  }

  public btAlignedObjectArrayFace m_faces {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_faces_set(swigCPtr, btAlignedObjectArrayFace.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_faces_get(swigCPtr);
      btAlignedObjectArrayFace ret = (cPtr == IntPtr.Zero) ? null : new btAlignedObjectArrayFace(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t m_tetras {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_tetras_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_tetras_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t m_anchors {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_anchors_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_anchors_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t m_rcontacts {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_rcontacts_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_rcontacts_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t m_scontacts {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_scontacts_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_scontacts_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t m_joints {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_joints_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_joints_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t(cPtr, false);
      return ret;
    } 
  }

  public btAlignedObjectArrayMaterialPtr m_materials {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_materials_set(swigCPtr, btAlignedObjectArrayMaterialPtr.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_materials_get(swigCPtr);
      btAlignedObjectArrayMaterialPtr ret = (cPtr == IntPtr.Zero) ? null : new btAlignedObjectArrayMaterialPtr(cPtr, false);
      return ret;
    } 
  }

  public float m_timeacc {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_timeacc_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.btSoftBody_m_timeacc_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3 m_bounds {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_bounds_set(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_bounds_get(swigCPtr);
      SWIGTYPE_p_btVector3 ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btVector3(cPtr, false);
      return ret;
    } 
  }

  public bool m_bUpdateRtCst {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_bUpdateRtCst_set(swigCPtr, value);
    } 
    get {
      bool ret = BulletSoftBodyPINVOKE.btSoftBody_m_bUpdateRtCst_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_btDbvt m_ndbvt {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_ndbvt_set(swigCPtr, SWIGTYPE_p_btDbvt.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btDbvt ret = new SWIGTYPE_p_btDbvt(BulletSoftBodyPINVOKE.btSoftBody_m_ndbvt_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btDbvt m_fdbvt {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_fdbvt_set(swigCPtr, SWIGTYPE_p_btDbvt.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btDbvt ret = new SWIGTYPE_p_btDbvt(BulletSoftBodyPINVOKE.btSoftBody_m_fdbvt_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btDbvt m_cdbvt {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_cdbvt_set(swigCPtr, SWIGTYPE_p_btDbvt.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btDbvt ret = new SWIGTYPE_p_btDbvt(BulletSoftBodyPINVOKE.btSoftBody_m_cdbvt_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t m_clusters {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_clusters_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_clusters_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t(cPtr, false);
      return ret;
    } 
  }

  public btAlignedObjectArrayInt m_linkNodeIndex {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_linkNodeIndex_set(swigCPtr, btAlignedObjectArrayInt.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_linkNodeIndex_get(swigCPtr);
      btAlignedObjectArrayInt ret = (cPtr == IntPtr.Zero) ? null : new btAlignedObjectArrayInt(cPtr, false);
      return ret;
    } 
  }

  public btAlignedObjectArrayInt m_faceNodeIndex {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_faceNodeIndex_set(swigCPtr, btAlignedObjectArrayInt.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_faceNodeIndex_get(swigCPtr);
      btAlignedObjectArrayInt ret = (cPtr == IntPtr.Zero) ? null : new btAlignedObjectArrayInt(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_bool_t m_clusterConnectivity {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_clusterConnectivity_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_bool_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_clusterConnectivity_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_bool_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btTransform m_initialWorldTransform {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_initialWorldTransform_set(swigCPtr, SWIGTYPE_p_btTransform.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btTransform ret = new SWIGTYPE_p_btTransform(BulletSoftBodyPINVOKE.btSoftBody_m_initialWorldTransform_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3 m_windVelocity {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_windVelocity_set(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.btSoftBody_m_windVelocity_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float m_restLengthScale {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_restLengthScale_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.btSoftBody_m_restLengthScale_get(swigCPtr);
      return ret;
    } 
  }

  public btSoftBody(btSoftBodyWorldInfo worldInfo, int node_count, SWIGTYPE_p_btVector3 x, SWIGTYPE_p_float m) : this(BulletSoftBodyPINVOKE.new_btSoftBody__SWIG_0(btSoftBodyWorldInfo.getCPtr(worldInfo), node_count, SWIGTYPE_p_btVector3.getCPtr(x), SWIGTYPE_p_float.getCPtr(m)), true) {
  }

  public btSoftBody(btSoftBodyWorldInfo worldInfo) : this(BulletSoftBodyPINVOKE.new_btSoftBody__SWIG_1(btSoftBodyWorldInfo.getCPtr(worldInfo)), true) {
  }

  public void initDefaults() {
    BulletSoftBodyPINVOKE.btSoftBody_initDefaults(swigCPtr);
  }

  public SWIGTYPE_p_btCollisionObject GetCollisionObject() {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_GetCollisionObject(swigCPtr);
    SWIGTYPE_p_btCollisionObject ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btCollisionObject(cPtr, false);
    return ret;
  }

  public void CollisionShapeSetMargin(float margin) {
    BulletSoftBodyPINVOKE.btSoftBody_CollisionShapeSetMargin(swigCPtr, margin);
  }

  public btAlignedObjectArrayInt m_userIndexMapping {
    set {
      BulletSoftBodyPINVOKE.btSoftBody_m_userIndexMapping_set(swigCPtr, btAlignedObjectArrayInt.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_m_userIndexMapping_get(swigCPtr);
      btAlignedObjectArrayInt ret = (cPtr == IntPtr.Zero) ? null : new btAlignedObjectArrayInt(cPtr, false);
      return ret;
    } 
  }

  public btSoftBodyWorldInfo getWorldInfo() {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_getWorldInfo(swigCPtr);
    btSoftBodyWorldInfo ret = (cPtr == IntPtr.Zero) ? null : new btSoftBodyWorldInfo(cPtr, false);
    return ret;
  }

  public virtual void setCollisionShape(SWIGTYPE_p_btCollisionShape collisionShape) {
    BulletSoftBodyPINVOKE.btSoftBody_setCollisionShape(swigCPtr, SWIGTYPE_p_btCollisionShape.getCPtr(collisionShape));
  }

  public bool checkLink(int node0, int node1) {
    bool ret = BulletSoftBodyPINVOKE.btSoftBody_checkLink__SWIG_0(swigCPtr, node0, node1);
    return ret;
  }

  public bool checkLink(Node node0, Node node1) {
    bool ret = BulletSoftBodyPINVOKE.btSoftBody_checkLink__SWIG_1(swigCPtr, Node.getCPtr(node0), Node.getCPtr(node1));
    return ret;
  }

  public bool checkFace(int node0, int node1, int node2) {
    bool ret = BulletSoftBodyPINVOKE.btSoftBody_checkFace(swigCPtr, node0, node1, node2);
    return ret;
  }

  public Material appendMaterial() {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_appendMaterial(swigCPtr);
    Material ret = (cPtr == IntPtr.Zero) ? null : new Material(cPtr, false);
    return ret;
  }

  public void appendNote(string text, SWIGTYPE_p_btVector3 o, SWIGTYPE_p_btVector4 c, Node n0, Node n1, Node n2, Node n3) {
    BulletSoftBodyPINVOKE.btSoftBody_appendNote__SWIG_0(swigCPtr, text, SWIGTYPE_p_btVector3.getCPtr(o), SWIGTYPE_p_btVector4.getCPtr(c), Node.getCPtr(n0), Node.getCPtr(n1), Node.getCPtr(n2), Node.getCPtr(n3));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendNote(string text, SWIGTYPE_p_btVector3 o, SWIGTYPE_p_btVector4 c, Node n0, Node n1, Node n2) {
    BulletSoftBodyPINVOKE.btSoftBody_appendNote__SWIG_1(swigCPtr, text, SWIGTYPE_p_btVector3.getCPtr(o), SWIGTYPE_p_btVector4.getCPtr(c), Node.getCPtr(n0), Node.getCPtr(n1), Node.getCPtr(n2));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendNote(string text, SWIGTYPE_p_btVector3 o, SWIGTYPE_p_btVector4 c, Node n0, Node n1) {
    BulletSoftBodyPINVOKE.btSoftBody_appendNote__SWIG_2(swigCPtr, text, SWIGTYPE_p_btVector3.getCPtr(o), SWIGTYPE_p_btVector4.getCPtr(c), Node.getCPtr(n0), Node.getCPtr(n1));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendNote(string text, SWIGTYPE_p_btVector3 o, SWIGTYPE_p_btVector4 c, Node n0) {
    BulletSoftBodyPINVOKE.btSoftBody_appendNote__SWIG_3(swigCPtr, text, SWIGTYPE_p_btVector3.getCPtr(o), SWIGTYPE_p_btVector4.getCPtr(c), Node.getCPtr(n0));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendNote(string text, SWIGTYPE_p_btVector3 o, SWIGTYPE_p_btVector4 c) {
    BulletSoftBodyPINVOKE.btSoftBody_appendNote__SWIG_4(swigCPtr, text, SWIGTYPE_p_btVector3.getCPtr(o), SWIGTYPE_p_btVector4.getCPtr(c));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendNote(string text, SWIGTYPE_p_btVector3 o) {
    BulletSoftBodyPINVOKE.btSoftBody_appendNote__SWIG_5(swigCPtr, text, SWIGTYPE_p_btVector3.getCPtr(o));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendNote(string text, SWIGTYPE_p_btVector3 o, Node feature) {
    BulletSoftBodyPINVOKE.btSoftBody_appendNote__SWIG_6(swigCPtr, text, SWIGTYPE_p_btVector3.getCPtr(o), Node.getCPtr(feature));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendNote(string text, SWIGTYPE_p_btVector3 o, Link feature) {
    BulletSoftBodyPINVOKE.btSoftBody_appendNote__SWIG_7(swigCPtr, text, SWIGTYPE_p_btVector3.getCPtr(o), Link.getCPtr(feature));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendNote(string text, SWIGTYPE_p_btVector3 o, Face feature) {
    BulletSoftBodyPINVOKE.btSoftBody_appendNote__SWIG_8(swigCPtr, text, SWIGTYPE_p_btVector3.getCPtr(o), Face.getCPtr(feature));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendNode(SWIGTYPE_p_btVector3 x, float m) {
    BulletSoftBodyPINVOKE.btSoftBody_appendNode(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(x), m);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendLink(int model, Material mat) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLink__SWIG_0(swigCPtr, model, Material.getCPtr(mat));
  }

  public void appendLink(int model) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLink__SWIG_1(swigCPtr, model);
  }

  public void appendLink() {
    BulletSoftBodyPINVOKE.btSoftBody_appendLink__SWIG_2(swigCPtr);
  }

  public void appendLink(int node0, int node1, Material mat, bool bcheckexist) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLink__SWIG_3(swigCPtr, node0, node1, Material.getCPtr(mat), bcheckexist);
  }

  public void appendLink(int node0, int node1, Material mat) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLink__SWIG_4(swigCPtr, node0, node1, Material.getCPtr(mat));
  }

  public void appendLink(int node0, int node1) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLink__SWIG_5(swigCPtr, node0, node1);
  }

  public void appendLink(Node node0, Node node1, Material mat, bool bcheckexist) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLink__SWIG_6(swigCPtr, Node.getCPtr(node0), Node.getCPtr(node1), Material.getCPtr(mat), bcheckexist);
  }

  public void appendLink(Node node0, Node node1, Material mat) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLink__SWIG_7(swigCPtr, Node.getCPtr(node0), Node.getCPtr(node1), Material.getCPtr(mat));
  }

  public void appendLink(Node node0, Node node1) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLink__SWIG_8(swigCPtr, Node.getCPtr(node0), Node.getCPtr(node1));
  }

  public void appendFace(int model, Material mat) {
    BulletSoftBodyPINVOKE.btSoftBody_appendFace__SWIG_0(swigCPtr, model, Material.getCPtr(mat));
  }

  public void appendFace(int model) {
    BulletSoftBodyPINVOKE.btSoftBody_appendFace__SWIG_1(swigCPtr, model);
  }

  public void appendFace() {
    BulletSoftBodyPINVOKE.btSoftBody_appendFace__SWIG_2(swigCPtr);
  }

  public void appendFace(int node0, int node1, int node2, Material mat) {
    BulletSoftBodyPINVOKE.btSoftBody_appendFace__SWIG_3(swigCPtr, node0, node1, node2, Material.getCPtr(mat));
  }

  public void appendFace(int node0, int node1, int node2) {
    BulletSoftBodyPINVOKE.btSoftBody_appendFace__SWIG_4(swigCPtr, node0, node1, node2);
  }

  public void appendTetra(int model, Material mat) {
    BulletSoftBodyPINVOKE.btSoftBody_appendTetra__SWIG_0(swigCPtr, model, Material.getCPtr(mat));
  }

  public void appendTetra(int node0, int node1, int node2, int node3, Material mat) {
    BulletSoftBodyPINVOKE.btSoftBody_appendTetra__SWIG_1(swigCPtr, node0, node1, node2, node3, Material.getCPtr(mat));
  }

  public void appendTetra(int node0, int node1, int node2, int node3) {
    BulletSoftBodyPINVOKE.btSoftBody_appendTetra__SWIG_2(swigCPtr, node0, node1, node2, node3);
  }

  public void appendAnchor(int node, SWIGTYPE_p_btRigidBody body, bool disableCollisionBetweenLinkedBodies, float influence) {
    BulletSoftBodyPINVOKE.btSoftBody_appendAnchor__SWIG_0(swigCPtr, node, SWIGTYPE_p_btRigidBody.getCPtr(body), disableCollisionBetweenLinkedBodies, influence);
  }

  public void appendAnchor(int node, SWIGTYPE_p_btRigidBody body, bool disableCollisionBetweenLinkedBodies) {
    BulletSoftBodyPINVOKE.btSoftBody_appendAnchor__SWIG_1(swigCPtr, node, SWIGTYPE_p_btRigidBody.getCPtr(body), disableCollisionBetweenLinkedBodies);
  }

  public void appendAnchor(int node, SWIGTYPE_p_btRigidBody body) {
    BulletSoftBodyPINVOKE.btSoftBody_appendAnchor__SWIG_2(swigCPtr, node, SWIGTYPE_p_btRigidBody.getCPtr(body));
  }

  public void appendAnchor(int node, SWIGTYPE_p_btRigidBody body, SWIGTYPE_p_btVector3 localPivot, bool disableCollisionBetweenLinkedBodies, float influence) {
    BulletSoftBodyPINVOKE.btSoftBody_appendAnchor__SWIG_3(swigCPtr, node, SWIGTYPE_p_btRigidBody.getCPtr(body), SWIGTYPE_p_btVector3.getCPtr(localPivot), disableCollisionBetweenLinkedBodies, influence);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendAnchor(int node, SWIGTYPE_p_btRigidBody body, SWIGTYPE_p_btVector3 localPivot, bool disableCollisionBetweenLinkedBodies) {
    BulletSoftBodyPINVOKE.btSoftBody_appendAnchor__SWIG_4(swigCPtr, node, SWIGTYPE_p_btRigidBody.getCPtr(body), SWIGTYPE_p_btVector3.getCPtr(localPivot), disableCollisionBetweenLinkedBodies);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendAnchor(int node, SWIGTYPE_p_btRigidBody body, SWIGTYPE_p_btVector3 localPivot) {
    BulletSoftBodyPINVOKE.btSoftBody_appendAnchor__SWIG_5(swigCPtr, node, SWIGTYPE_p_btRigidBody.getCPtr(body), SWIGTYPE_p_btVector3.getCPtr(localPivot));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendLinearJoint(SWIGTYPE_p_btSoftBody__LJoint__Specs specs, SWIGTYPE_p_btSoftBody__Cluster body0, SWIGTYPE_p_btSoftBody__Body body1) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLinearJoint__SWIG_0(swigCPtr, SWIGTYPE_p_btSoftBody__LJoint__Specs.getCPtr(specs), SWIGTYPE_p_btSoftBody__Cluster.getCPtr(body0), SWIGTYPE_p_btSoftBody__Body.getCPtr(body1));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendLinearJoint(SWIGTYPE_p_btSoftBody__LJoint__Specs specs, SWIGTYPE_p_btSoftBody__Body body) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLinearJoint__SWIG_1(swigCPtr, SWIGTYPE_p_btSoftBody__LJoint__Specs.getCPtr(specs), SWIGTYPE_p_btSoftBody__Body.getCPtr(body));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendLinearJoint(SWIGTYPE_p_btSoftBody__LJoint__Specs specs) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLinearJoint__SWIG_2(swigCPtr, SWIGTYPE_p_btSoftBody__LJoint__Specs.getCPtr(specs));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendLinearJoint(SWIGTYPE_p_btSoftBody__LJoint__Specs specs, btSoftBody body) {
    BulletSoftBodyPINVOKE.btSoftBody_appendLinearJoint__SWIG_3(swigCPtr, SWIGTYPE_p_btSoftBody__LJoint__Specs.getCPtr(specs), btSoftBody.getCPtr(body));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendAngularJoint(SWIGTYPE_p_btSoftBody__AJoint__Specs specs, SWIGTYPE_p_btSoftBody__Cluster body0, SWIGTYPE_p_btSoftBody__Body body1) {
    BulletSoftBodyPINVOKE.btSoftBody_appendAngularJoint__SWIG_0(swigCPtr, SWIGTYPE_p_btSoftBody__AJoint__Specs.getCPtr(specs), SWIGTYPE_p_btSoftBody__Cluster.getCPtr(body0), SWIGTYPE_p_btSoftBody__Body.getCPtr(body1));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendAngularJoint(SWIGTYPE_p_btSoftBody__AJoint__Specs specs, SWIGTYPE_p_btSoftBody__Body body) {
    BulletSoftBodyPINVOKE.btSoftBody_appendAngularJoint__SWIG_1(swigCPtr, SWIGTYPE_p_btSoftBody__AJoint__Specs.getCPtr(specs), SWIGTYPE_p_btSoftBody__Body.getCPtr(body));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendAngularJoint(SWIGTYPE_p_btSoftBody__AJoint__Specs specs) {
    BulletSoftBodyPINVOKE.btSoftBody_appendAngularJoint__SWIG_2(swigCPtr, SWIGTYPE_p_btSoftBody__AJoint__Specs.getCPtr(specs));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void appendAngularJoint(SWIGTYPE_p_btSoftBody__AJoint__Specs specs, btSoftBody body) {
    BulletSoftBodyPINVOKE.btSoftBody_appendAngularJoint__SWIG_3(swigCPtr, SWIGTYPE_p_btSoftBody__AJoint__Specs.getCPtr(specs), btSoftBody.getCPtr(body));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addForce(SWIGTYPE_p_btVector3 force) {
    BulletSoftBodyPINVOKE.btSoftBody_addForce__SWIG_0(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(force));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addForce(SWIGTYPE_p_btVector3 force, int node) {
    BulletSoftBodyPINVOKE.btSoftBody_addForce__SWIG_1(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(force), node);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addAeroForceToNode(SWIGTYPE_p_btVector3 windVelocity, int nodeIndex) {
    BulletSoftBodyPINVOKE.btSoftBody_addAeroForceToNode(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(windVelocity), nodeIndex);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addAeroForceToFace(SWIGTYPE_p_btVector3 windVelocity, int faceIndex) {
    BulletSoftBodyPINVOKE.btSoftBody_addAeroForceToFace(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(windVelocity), faceIndex);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addVelocity(SWIGTYPE_p_btVector3 velocity) {
    BulletSoftBodyPINVOKE.btSoftBody_addVelocity__SWIG_0(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(velocity));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setVelocity(SWIGTYPE_p_btVector3 velocity) {
    BulletSoftBodyPINVOKE.btSoftBody_setVelocity(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(velocity));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addVelocity(SWIGTYPE_p_btVector3 velocity, int node) {
    BulletSoftBodyPINVOKE.btSoftBody_addVelocity__SWIG_1(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(velocity), node);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setMass(int node, float mass) {
    BulletSoftBodyPINVOKE.btSoftBody_setMass(swigCPtr, node, mass);
  }

  public float getMass(int node) {
    float ret = BulletSoftBodyPINVOKE.btSoftBody_getMass(swigCPtr, node);
    return ret;
  }

  public float getTotalMass() {
    float ret = BulletSoftBodyPINVOKE.btSoftBody_getTotalMass(swigCPtr);
    return ret;
  }

  public void setTotalMass(float mass, bool fromfaces) {
    BulletSoftBodyPINVOKE.btSoftBody_setTotalMass__SWIG_0(swigCPtr, mass, fromfaces);
  }

  public void setTotalMass(float mass) {
    BulletSoftBodyPINVOKE.btSoftBody_setTotalMass__SWIG_1(swigCPtr, mass);
  }

  public void setTotalDensity(float density) {
    BulletSoftBodyPINVOKE.btSoftBody_setTotalDensity(swigCPtr, density);
  }

  public void setVolumeMass(float mass) {
    BulletSoftBodyPINVOKE.btSoftBody_setVolumeMass(swigCPtr, mass);
  }

  public void setVolumeDensity(float density) {
    BulletSoftBodyPINVOKE.btSoftBody_setVolumeDensity(swigCPtr, density);
  }

  public void transform(SWIGTYPE_p_btTransform trs) {
    BulletSoftBodyPINVOKE.btSoftBody_transform(swigCPtr, SWIGTYPE_p_btTransform.getCPtr(trs));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void translate(SWIGTYPE_p_btVector3 trs) {
    BulletSoftBodyPINVOKE.btSoftBody_translate(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(trs));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void rotate(SWIGTYPE_p_btQuaternion rot) {
    BulletSoftBodyPINVOKE.btSoftBody_rotate(swigCPtr, SWIGTYPE_p_btQuaternion.getCPtr(rot));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void scale(SWIGTYPE_p_btVector3 scl) {
    BulletSoftBodyPINVOKE.btSoftBody_scale(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(scl));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public float getRestLengthScale() {
    float ret = BulletSoftBodyPINVOKE.btSoftBody_getRestLengthScale(swigCPtr);
    return ret;
  }

  public void setRestLengthScale(float restLength) {
    BulletSoftBodyPINVOKE.btSoftBody_setRestLengthScale(swigCPtr, restLength);
  }

  public void setPose(bool bvolume, bool bframe) {
    BulletSoftBodyPINVOKE.btSoftBody_setPose(swigCPtr, bvolume, bframe);
  }

  public void resetLinkRestLengths() {
    BulletSoftBodyPINVOKE.btSoftBody_resetLinkRestLengths(swigCPtr);
  }

  public float getVolume() {
    float ret = BulletSoftBodyPINVOKE.btSoftBody_getVolume(swigCPtr);
    return ret;
  }

  public int clusterCount() {
    int ret = BulletSoftBodyPINVOKE.btSoftBody_clusterCount(swigCPtr);
    return ret;
  }

  public static SWIGTYPE_p_btVector3 clusterCom(SWIGTYPE_p_btSoftBody__Cluster cluster) {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.btSoftBody_clusterCom__SWIG_0(SWIGTYPE_p_btSoftBody__Cluster.getCPtr(cluster)), true);
    return ret;
  }

  public SWIGTYPE_p_btVector3 clusterCom(int cluster) {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.btSoftBody_clusterCom__SWIG_1(swigCPtr, cluster), true);
    return ret;
  }

  public static SWIGTYPE_p_btVector3 clusterVelocity(SWIGTYPE_p_btSoftBody__Cluster cluster, SWIGTYPE_p_btVector3 rpos) {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.btSoftBody_clusterVelocity(SWIGTYPE_p_btSoftBody__Cluster.getCPtr(cluster), SWIGTYPE_p_btVector3.getCPtr(rpos)), true);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void clusterVImpulse(SWIGTYPE_p_btSoftBody__Cluster cluster, SWIGTYPE_p_btVector3 rpos, SWIGTYPE_p_btVector3 impulse) {
    BulletSoftBodyPINVOKE.btSoftBody_clusterVImpulse(SWIGTYPE_p_btSoftBody__Cluster.getCPtr(cluster), SWIGTYPE_p_btVector3.getCPtr(rpos), SWIGTYPE_p_btVector3.getCPtr(impulse));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void clusterDImpulse(SWIGTYPE_p_btSoftBody__Cluster cluster, SWIGTYPE_p_btVector3 rpos, SWIGTYPE_p_btVector3 impulse) {
    BulletSoftBodyPINVOKE.btSoftBody_clusterDImpulse(SWIGTYPE_p_btSoftBody__Cluster.getCPtr(cluster), SWIGTYPE_p_btVector3.getCPtr(rpos), SWIGTYPE_p_btVector3.getCPtr(impulse));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void clusterImpulse(SWIGTYPE_p_btSoftBody__Cluster cluster, SWIGTYPE_p_btVector3 rpos, SWIGTYPE_p_btSoftBody__Impulse impulse) {
    BulletSoftBodyPINVOKE.btSoftBody_clusterImpulse(SWIGTYPE_p_btSoftBody__Cluster.getCPtr(cluster), SWIGTYPE_p_btVector3.getCPtr(rpos), SWIGTYPE_p_btSoftBody__Impulse.getCPtr(impulse));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void clusterVAImpulse(SWIGTYPE_p_btSoftBody__Cluster cluster, SWIGTYPE_p_btVector3 impulse) {
    BulletSoftBodyPINVOKE.btSoftBody_clusterVAImpulse(SWIGTYPE_p_btSoftBody__Cluster.getCPtr(cluster), SWIGTYPE_p_btVector3.getCPtr(impulse));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void clusterDAImpulse(SWIGTYPE_p_btSoftBody__Cluster cluster, SWIGTYPE_p_btVector3 impulse) {
    BulletSoftBodyPINVOKE.btSoftBody_clusterDAImpulse(SWIGTYPE_p_btSoftBody__Cluster.getCPtr(cluster), SWIGTYPE_p_btVector3.getCPtr(impulse));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void clusterAImpulse(SWIGTYPE_p_btSoftBody__Cluster cluster, SWIGTYPE_p_btSoftBody__Impulse impulse) {
    BulletSoftBodyPINVOKE.btSoftBody_clusterAImpulse(SWIGTYPE_p_btSoftBody__Cluster.getCPtr(cluster), SWIGTYPE_p_btSoftBody__Impulse.getCPtr(impulse));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void clusterDCImpulse(SWIGTYPE_p_btSoftBody__Cluster cluster, SWIGTYPE_p_btVector3 impulse) {
    BulletSoftBodyPINVOKE.btSoftBody_clusterDCImpulse(SWIGTYPE_p_btSoftBody__Cluster.getCPtr(cluster), SWIGTYPE_p_btVector3.getCPtr(impulse));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public int generateBendingConstraints(int distance, Material mat) {
    int ret = BulletSoftBodyPINVOKE.btSoftBody_generateBendingConstraints__SWIG_0(swigCPtr, distance, Material.getCPtr(mat));
    return ret;
  }

  public int generateBendingConstraints(int distance) {
    int ret = BulletSoftBodyPINVOKE.btSoftBody_generateBendingConstraints__SWIG_1(swigCPtr, distance);
    return ret;
  }

  public void randomizeConstraints() {
    BulletSoftBodyPINVOKE.btSoftBody_randomizeConstraints(swigCPtr);
  }

  public void releaseCluster(int index) {
    BulletSoftBodyPINVOKE.btSoftBody_releaseCluster(swigCPtr, index);
  }

  public void releaseClusters() {
    BulletSoftBodyPINVOKE.btSoftBody_releaseClusters(swigCPtr);
  }

  public int generateClusters(int k, int maxiterations) {
    int ret = BulletSoftBodyPINVOKE.btSoftBody_generateClusters__SWIG_0(swigCPtr, k, maxiterations);
    return ret;
  }

  public int generateClusters(int k) {
    int ret = BulletSoftBodyPINVOKE.btSoftBody_generateClusters__SWIG_1(swigCPtr, k);
    return ret;
  }

  public void refine(SWIGTYPE_p_btSoftBody__ImplicitFn ifn, float accurary, bool cut) {
    BulletSoftBodyPINVOKE.btSoftBody_refine(swigCPtr, SWIGTYPE_p_btSoftBody__ImplicitFn.getCPtr(ifn), accurary, cut);
  }

  public bool cutLink(int node0, int node1, float position) {
    bool ret = BulletSoftBodyPINVOKE.btSoftBody_cutLink__SWIG_0(swigCPtr, node0, node1, position);
    return ret;
  }

  public bool cutLink(Node node0, Node node1, float position) {
    bool ret = BulletSoftBodyPINVOKE.btSoftBody_cutLink__SWIG_1(swigCPtr, Node.getCPtr(node0), Node.getCPtr(node1), position);
    return ret;
  }

  public bool rayTest(SWIGTYPE_p_btVector3 rayFrom, SWIGTYPE_p_btVector3 rayTo, SWIGTYPE_p_btSoftBody__sRayCast results) {
    bool ret = BulletSoftBodyPINVOKE.btSoftBody_rayTest__SWIG_0(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(rayFrom), SWIGTYPE_p_btVector3.getCPtr(rayTo), SWIGTYPE_p_btSoftBody__sRayCast.getCPtr(results));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setSolver(SWIGTYPE_p_btSoftBody__eSolverPresets___ preset) {
    BulletSoftBodyPINVOKE.btSoftBody_setSolver(swigCPtr, SWIGTYPE_p_btSoftBody__eSolverPresets___.getCPtr(preset));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void predictMotion(float dt) {
    BulletSoftBodyPINVOKE.btSoftBody_predictMotion(swigCPtr, dt);
  }

  public void solveConstraints() {
    BulletSoftBodyPINVOKE.btSoftBody_solveConstraints(swigCPtr);
  }

  public void staticSolve(int iterations) {
    BulletSoftBodyPINVOKE.btSoftBody_staticSolve(swigCPtr, iterations);
  }

  public static void solveCommonConstraints(SWIGTYPE_p_p_btSoftBody bodies, int count, int iterations) {
    BulletSoftBodyPINVOKE.btSoftBody_solveCommonConstraints(SWIGTYPE_p_p_btSoftBody.getCPtr(bodies), count, iterations);
  }

  public static void solveClusters(SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t bodies) {
    BulletSoftBodyPINVOKE.btSoftBody_solveClusters__SWIG_0(SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t.getCPtr(bodies));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void integrateMotion() {
    BulletSoftBodyPINVOKE.btSoftBody_integrateMotion(swigCPtr);
  }

  public void defaultCollisionHandler(SWIGTYPE_p_btCollisionObjectWrapper pcoWrap) {
    BulletSoftBodyPINVOKE.btSoftBody_defaultCollisionHandler__SWIG_0(swigCPtr, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(pcoWrap));
  }

  public void defaultCollisionHandler(btSoftBody psb) {
    BulletSoftBodyPINVOKE.btSoftBody_defaultCollisionHandler__SWIG_1(swigCPtr, btSoftBody.getCPtr(psb));
  }

  public SWIGTYPE_p_btVector3 GetNodeIndexFromFace(Face face) {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.btSoftBody_GetNodeIndexFromFace(swigCPtr, Face.getCPtr(face)), true);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setWindVelocity(SWIGTYPE_p_btVector3 velocity) {
    BulletSoftBodyPINVOKE.btSoftBody_setWindVelocity(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(velocity));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_btVector3 getWindVelocity() {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.btSoftBody_getWindVelocity(swigCPtr), false);
    return ret;
  }

  public void setSoftBodySolver(btSoftBodySolver softBodySolver) {
    BulletSoftBodyPINVOKE.btSoftBody_setSoftBodySolver(swigCPtr, btSoftBodySolver.getCPtr(softBodySolver));
  }

  public btSoftBodySolver getSoftBodySolver() {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_getSoftBodySolver__SWIG_0(swigCPtr);
    btSoftBodySolver ret = (cPtr == IntPtr.Zero) ? null : new btSoftBodySolver(cPtr, false);
    return ret;
  }

  public static btSoftBody upcast(SWIGTYPE_p_btCollisionObject colObj) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_upcast__SWIG_0(SWIGTYPE_p_btCollisionObject.getCPtr(colObj));
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    return ret;
  }

  public virtual void getAabb(SWIGTYPE_p_btVector3 aabbMin, SWIGTYPE_p_btVector3 aabbMax) {
    BulletSoftBodyPINVOKE.btSoftBody_getAabb(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(aabbMin), SWIGTYPE_p_btVector3.getCPtr(aabbMax));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void pointersToIndices() {
    BulletSoftBodyPINVOKE.btSoftBody_pointersToIndices(swigCPtr);
  }

  public void indicesToPointers(SWIGTYPE_p_int map) {
    BulletSoftBodyPINVOKE.btSoftBody_indicesToPointers__SWIG_0(swigCPtr, SWIGTYPE_p_int.getCPtr(map));
  }

  public void indicesToPointers() {
    BulletSoftBodyPINVOKE.btSoftBody_indicesToPointers__SWIG_1(swigCPtr);
  }

  public int rayTest(SWIGTYPE_p_btVector3 rayFrom, SWIGTYPE_p_btVector3 rayTo, SWIGTYPE_p_float mint, SWIGTYPE_p_btSoftBody__eFeature___ feature, SWIGTYPE_p_int index, bool bcountonly) {
    int ret = BulletSoftBodyPINVOKE.btSoftBody_rayTest__SWIG_1(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(rayFrom), SWIGTYPE_p_btVector3.getCPtr(rayTo), SWIGTYPE_p_float.getCPtr(mint), SWIGTYPE_p_btSoftBody__eFeature___.getCPtr(feature), SWIGTYPE_p_int.getCPtr(index), bcountonly);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void initializeFaceTree() {
    BulletSoftBodyPINVOKE.btSoftBody_initializeFaceTree(swigCPtr);
  }

  public SWIGTYPE_p_btVector3 evaluateCom() {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.btSoftBody_evaluateCom(swigCPtr), true);
    return ret;
  }

  public bool checkContact(SWIGTYPE_p_btCollisionObjectWrapper colObjWrap, SWIGTYPE_p_btVector3 x, float margin, SWIGTYPE_p_btSoftBody__sCti cti) {
    bool ret = BulletSoftBodyPINVOKE.btSoftBody_checkContact(swigCPtr, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(colObjWrap), SWIGTYPE_p_btVector3.getCPtr(x), margin, SWIGTYPE_p_btSoftBody__sCti.getCPtr(cti));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void updateNormals() {
    BulletSoftBodyPINVOKE.btSoftBody_updateNormals(swigCPtr);
  }

  public void updateBounds() {
    BulletSoftBodyPINVOKE.btSoftBody_updateBounds(swigCPtr);
  }

  public void updatePose() {
    BulletSoftBodyPINVOKE.btSoftBody_updatePose(swigCPtr);
  }

  public void updateConstants() {
    BulletSoftBodyPINVOKE.btSoftBody_updateConstants(swigCPtr);
  }

  public void updateLinkConstants() {
    BulletSoftBodyPINVOKE.btSoftBody_updateLinkConstants(swigCPtr);
  }

  public void updateArea(bool averageArea) {
    BulletSoftBodyPINVOKE.btSoftBody_updateArea__SWIG_0(swigCPtr, averageArea);
  }

  public void updateArea() {
    BulletSoftBodyPINVOKE.btSoftBody_updateArea__SWIG_1(swigCPtr);
  }

  public void initializeClusters() {
    BulletSoftBodyPINVOKE.btSoftBody_initializeClusters(swigCPtr);
  }

  public void updateClusters() {
    BulletSoftBodyPINVOKE.btSoftBody_updateClusters(swigCPtr);
  }

  public void cleanupClusters() {
    BulletSoftBodyPINVOKE.btSoftBody_cleanupClusters(swigCPtr);
  }

  public void prepareClusters(int iterations) {
    BulletSoftBodyPINVOKE.btSoftBody_prepareClusters(swigCPtr, iterations);
  }

  public void solveClusters(float sor) {
    BulletSoftBodyPINVOKE.btSoftBody_solveClusters__SWIG_1(swigCPtr, sor);
  }

  public void applyClusters(bool drift) {
    BulletSoftBodyPINVOKE.btSoftBody_applyClusters(swigCPtr, drift);
  }

  public void dampClusters() {
    BulletSoftBodyPINVOKE.btSoftBody_dampClusters(swigCPtr);
  }

  public void applyForces() {
    BulletSoftBodyPINVOKE.btSoftBody_applyForces(swigCPtr);
  }

  public static void PSolve_Anchors(btSoftBody psb, float kst, float ti) {
    BulletSoftBodyPINVOKE.btSoftBody_PSolve_Anchors(btSoftBody.getCPtr(psb), kst, ti);
  }

  public static void PSolve_RContacts(btSoftBody psb, float kst, float ti) {
    BulletSoftBodyPINVOKE.btSoftBody_PSolve_RContacts(btSoftBody.getCPtr(psb), kst, ti);
  }

  public static void PSolve_SContacts(btSoftBody psb, float arg1, float ti) {
    BulletSoftBodyPINVOKE.btSoftBody_PSolve_SContacts(btSoftBody.getCPtr(psb), arg1, ti);
  }

  public static void PSolve_Links(btSoftBody psb, float kst, float ti) {
    BulletSoftBodyPINVOKE.btSoftBody_PSolve_Links(btSoftBody.getCPtr(psb), kst, ti);
  }

  public static void VSolve_Links(btSoftBody psb, float kst) {
    BulletSoftBodyPINVOKE.btSoftBody_VSolve_Links(btSoftBody.getCPtr(psb), kst);
  }

  public static SWIGTYPE_p_f_p_btSoftBody_float_float__void getSolver(ePSolver._ solver) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_getSolver__SWIG_0((int)solver);
    SWIGTYPE_p_f_p_btSoftBody_float_float__void ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_btSoftBody_float_float__void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_f_p_btSoftBody_float__void getSolver(eVSolver._ solver) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBody_getSolver__SWIG_1((int)solver);
    SWIGTYPE_p_f_p_btSoftBody_float__void ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_btSoftBody_float__void(cPtr, false);
    return ret;
  }

  public virtual int calculateSerializeBufferSize() {
    int ret = BulletSoftBodyPINVOKE.btSoftBody_calculateSerializeBufferSize(swigCPtr);
    return ret;
  }

  public virtual string serialize(SWIGTYPE_p_void dataBuffer, SWIGTYPE_p_btSerializer serializer) {
    string ret = BulletSoftBodyPINVOKE.btSoftBody_serialize(swigCPtr, SWIGTYPE_p_void.getCPtr(dataBuffer), SWIGTYPE_p_btSerializer.getCPtr(serializer));
    return ret;
  }

}

}
