/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btConvexHullComputer : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btConvexHullComputer(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(btConvexHullComputer obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btConvexHullComputer() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LinearMathPINVOKE.delete_btConvexHullComputer(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t vertices {
    set {
      LinearMathPINVOKE.btConvexHullComputer_vertices_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = LinearMathPINVOKE.btConvexHullComputer_vertices_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t edges {
    set {
      LinearMathPINVOKE.btConvexHullComputer_edges_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = LinearMathPINVOKE.btConvexHullComputer_edges_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_int_t faces {
    set {
      LinearMathPINVOKE.btConvexHullComputer_faces_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_int_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = LinearMathPINVOKE.btConvexHullComputer_faces_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_int_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_int_t(cPtr, false);
      return ret;
    } 
  }

  public float compute(SWIGTYPE_p_float coords, int stride, int count, float shrink, float shrinkClamp) {
    float ret = LinearMathPINVOKE.btConvexHullComputer_compute__SWIG_0(swigCPtr, SWIGTYPE_p_float.getCPtr(coords), stride, count, shrink, shrinkClamp);
    return ret;
  }

  public float compute(SWIGTYPE_p_double coords, int stride, int count, float shrink, float shrinkClamp) {
    float ret = LinearMathPINVOKE.btConvexHullComputer_compute__SWIG_1(swigCPtr, SWIGTYPE_p_double.getCPtr(coords), stride, count, shrink, shrinkClamp);
    return ret;
  }

  public btConvexHullComputer() : this(LinearMathPINVOKE.new_btConvexHullComputer(), true) {
  }

}

}
