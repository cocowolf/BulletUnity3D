/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btSparseSdf3 : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btSparseSdf3(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  // convert swigtype to object , linyuan add 
  public static btSparseSdf3 GetObjectFromSwigPtr(SWIGTYPE_p_btSparseSdfT_3_t ptr)
  {
      HandleRef handle = SWIGTYPE_p_btSparseSdfT_3_t.getCPtr(ptr);
      if (handle.Wrapper == null || handle.Handle == IntPtr.Zero)
      {
          return null;
      }

      return new btSparseSdf3(handle.Handle, false);
  }

  internal static HandleRef getCPtr(btSparseSdf3 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btSparseSdf3() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletSoftBodyPINVOKE.delete_btSparseSdf3(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t cells {
    set {
      BulletSoftBodyPINVOKE.btSparseSdf3_cells_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSparseSdf3_cells_get(swigCPtr);
      SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t(cPtr, false);
      return ret;
    } 
  }

  public float voxelsz {
    set {
      BulletSoftBodyPINVOKE.btSparseSdf3_voxelsz_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.btSparseSdf3_voxelsz_get(swigCPtr);
      return ret;
    } 
  }

  public int puid {
    set {
      BulletSoftBodyPINVOKE.btSparseSdf3_puid_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSparseSdf3_puid_get(swigCPtr);
      return ret;
    } 
  }

  public int ncells {
    set {
      BulletSoftBodyPINVOKE.btSparseSdf3_ncells_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSparseSdf3_ncells_get(swigCPtr);
      return ret;
    } 
  }

  public int nprobes {
    set {
      BulletSoftBodyPINVOKE.btSparseSdf3_nprobes_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSparseSdf3_nprobes_get(swigCPtr);
      return ret;
    } 
  }

  public int nqueries {
    set {
      BulletSoftBodyPINVOKE.btSparseSdf3_nqueries_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSparseSdf3_nqueries_get(swigCPtr);
      return ret;
    } 
  }

  public void Initialize(int hashsize) {
    BulletSoftBodyPINVOKE.btSparseSdf3_Initialize__SWIG_0(swigCPtr, hashsize);
  }

  public void Initialize() {
    BulletSoftBodyPINVOKE.btSparseSdf3_Initialize__SWIG_1(swigCPtr);
  }

  public void Reset() {
    BulletSoftBodyPINVOKE.btSparseSdf3_Reset(swigCPtr);
  }

  public void GarbageCollect(int lifetime) {
    BulletSoftBodyPINVOKE.btSparseSdf3_GarbageCollect__SWIG_0(swigCPtr, lifetime);
  }

  public void GarbageCollect() {
    BulletSoftBodyPINVOKE.btSparseSdf3_GarbageCollect__SWIG_1(swigCPtr);
  }

  public int RemoveReferences(SWIGTYPE_p_btCollisionShape pcs) {
    int ret = BulletSoftBodyPINVOKE.btSparseSdf3_RemoveReferences(swigCPtr, SWIGTYPE_p_btCollisionShape.getCPtr(pcs));
    return ret;
  }

  public float Evaluate(SWIGTYPE_p_btVector3 x, SWIGTYPE_p_btCollisionShape shape, SWIGTYPE_p_btVector3 normal, float margin) {
    float ret = BulletSoftBodyPINVOKE.btSparseSdf3_Evaluate(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(x), SWIGTYPE_p_btCollisionShape.getCPtr(shape), SWIGTYPE_p_btVector3.getCPtr(normal), margin);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void BuildCell(SWIGTYPE_p_btSparseSdfT_3_t__Cell c) {
    BulletSoftBodyPINVOKE.btSparseSdf3_BuildCell(swigCPtr, SWIGTYPE_p_btSparseSdfT_3_t__Cell.getCPtr(c));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
  }

  public static float DistanceToShape(SWIGTYPE_p_btVector3 x, SWIGTYPE_p_btCollisionShape shape) {
    float ret = BulletSoftBodyPINVOKE.btSparseSdf3_DistanceToShape(SWIGTYPE_p_btVector3.getCPtr(x), SWIGTYPE_p_btCollisionShape.getCPtr(shape));
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_btSparseSdfT_3_t__IntFrac Decompose(float x) {
    SWIGTYPE_p_btSparseSdfT_3_t__IntFrac ret = new SWIGTYPE_p_btSparseSdfT_3_t__IntFrac(BulletSoftBodyPINVOKE.btSparseSdf3_Decompose(x), true);
    return ret;
  }

  public static float Lerp(float a, float b, float t) {
    float ret = BulletSoftBodyPINVOKE.btSparseSdf3_Lerp(a, b, t);
    return ret;
  }

  public static uint Hash(int x, int y, int z, SWIGTYPE_p_btCollisionShape shape) {
    uint ret = BulletSoftBodyPINVOKE.btSparseSdf3_Hash(x, y, z, SWIGTYPE_p_btCollisionShape.getCPtr(shape));
    return ret;
  }

  public btSparseSdf3() : this(BulletSoftBodyPINVOKE.new_btSparseSdf3(), true) {
  }

}

}
