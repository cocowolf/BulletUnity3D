/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btGeneric6DofConstraint : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;
  private SWIGTYPE_p_btTypedConstraint swigWrapPtr;

  internal btGeneric6DofConstraint(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
    swigWrapPtr = new SWIGTYPE_p_btTypedConstraint(cPtr, true);
  }

  internal static HandleRef getCPtr(btGeneric6DofConstraint obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btGeneric6DofConstraint() {
    Dispose();
  }

  public SWIGTYPE_p_btTypedConstraint GetSwigPtr()
  {
      return swigWrapPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletDynamicsPINVOKE.delete_btGeneric6DofConstraint(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
        swigWrapPtr = new SWIGTYPE_p_btTypedConstraint(IntPtr.Zero, true);
      }
      GC.SuppressFinalize(this);
    }
  }

  public bool m_useSolveConstraintObsolete {
    set {
      BulletDynamicsPINVOKE.btGeneric6DofConstraint_m_useSolveConstraintObsolete_set(swigCPtr, value);
    } 
    get {
      bool ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_m_useSolveConstraintObsolete_get(swigCPtr);
      return ret;
    } 
  }

  public btGeneric6DofConstraint(btRigidBody rbA, btRigidBody rbB, SWIGTYPE_p_btTransform frameInA, SWIGTYPE_p_btTransform frameInB, bool useLinearReferenceFrameA) : this(BulletDynamicsPINVOKE.new_btGeneric6DofConstraint__SWIG_0(btRigidBody.getCPtr(rbA), btRigidBody.getCPtr(rbB), SWIGTYPE_p_btTransform.getCPtr(frameInA), SWIGTYPE_p_btTransform.getCPtr(frameInB), useLinearReferenceFrameA), true) {
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public btGeneric6DofConstraint(btRigidBody rbB, SWIGTYPE_p_btTransform frameInB, bool useLinearReferenceFrameB) : this(BulletDynamicsPINVOKE.new_btGeneric6DofConstraint__SWIG_1(btRigidBody.getCPtr(rbB), SWIGTYPE_p_btTransform.getCPtr(frameInB), useLinearReferenceFrameB), true) {
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public void calculateTransforms(SWIGTYPE_p_btTransform transA, SWIGTYPE_p_btTransform transB) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_calculateTransforms__SWIG_0(swigCPtr, SWIGTYPE_p_btTransform.getCPtr(transA), SWIGTYPE_p_btTransform.getCPtr(transB));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public void calculateTransforms() {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_calculateTransforms__SWIG_1(swigCPtr);
  }

  public SWIGTYPE_p_btTransform getCalculatedTransformA() {
    SWIGTYPE_p_btTransform ret = new SWIGTYPE_p_btTransform(BulletDynamicsPINVOKE.btGeneric6DofConstraint_getCalculatedTransformA(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_btTransform getCalculatedTransformB() {
    SWIGTYPE_p_btTransform ret = new SWIGTYPE_p_btTransform(BulletDynamicsPINVOKE.btGeneric6DofConstraint_getCalculatedTransformB(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_btTransform getFrameOffsetA() {
    SWIGTYPE_p_btTransform ret = new SWIGTYPE_p_btTransform(BulletDynamicsPINVOKE.btGeneric6DofConstraint_getFrameOffsetA__SWIG_0(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_btTransform getFrameOffsetB() {
    SWIGTYPE_p_btTransform ret = new SWIGTYPE_p_btTransform(BulletDynamicsPINVOKE.btGeneric6DofConstraint_getFrameOffsetB__SWIG_0(swigCPtr), false);
    return ret;
  }

  public virtual void buildJacobian() {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_buildJacobian(swigCPtr);
  }

  public virtual void getInfo1(btConstraintInfo1 info) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_getInfo1(swigCPtr, btConstraintInfo1.getCPtr(info));
  }

  public void getInfo1NonVirtual(btConstraintInfo1 info) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_getInfo1NonVirtual(swigCPtr, btConstraintInfo1.getCPtr(info));
  }

  public virtual void getInfo2(btConstraintInfo2 info) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_getInfo2(swigCPtr, btConstraintInfo2.getCPtr(info));
  }

  public void getInfo2NonVirtual(btConstraintInfo2 info, SWIGTYPE_p_btTransform transA, SWIGTYPE_p_btTransform transB, SWIGTYPE_p_btVector3 linVelA, SWIGTYPE_p_btVector3 linVelB, SWIGTYPE_p_btVector3 angVelA, SWIGTYPE_p_btVector3 angVelB) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_getInfo2NonVirtual(swigCPtr, btConstraintInfo2.getCPtr(info), SWIGTYPE_p_btTransform.getCPtr(transA), SWIGTYPE_p_btTransform.getCPtr(transB), SWIGTYPE_p_btVector3.getCPtr(linVelA), SWIGTYPE_p_btVector3.getCPtr(linVelB), SWIGTYPE_p_btVector3.getCPtr(angVelA), SWIGTYPE_p_btVector3.getCPtr(angVelB));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public void updateRHS(float timeStep) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_updateRHS(swigCPtr, timeStep);
  }

  public SWIGTYPE_p_btVector3 getAxis(int axis_index) {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletDynamicsPINVOKE.btGeneric6DofConstraint_getAxis(swigCPtr, axis_index), true);
    return ret;
  }

  public float getAngle(int axis_index) {
    float ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_getAngle(swigCPtr, axis_index);
    return ret;
  }

  public float getRelativePivotPosition(int axis_index) {
    float ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_getRelativePivotPosition(swigCPtr, axis_index);
    return ret;
  }

  public void setFrames(SWIGTYPE_p_btTransform frameA, SWIGTYPE_p_btTransform frameB) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_setFrames(swigCPtr, SWIGTYPE_p_btTransform.getCPtr(frameA), SWIGTYPE_p_btTransform.getCPtr(frameB));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool testAngularLimitMotor(int axis_index) {
    bool ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_testAngularLimitMotor(swigCPtr, axis_index);
    return ret;
  }

  public void setLinearLowerLimit(SWIGTYPE_p_btVector3 linearLower) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_setLinearLowerLimit(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(linearLower));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public void getLinearLowerLimit(SWIGTYPE_p_btVector3 linearLower) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_getLinearLowerLimit(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(linearLower));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setLinearUpperLimit(SWIGTYPE_p_btVector3 linearUpper) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_setLinearUpperLimit(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(linearUpper));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public void getLinearUpperLimit(SWIGTYPE_p_btVector3 linearUpper) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_getLinearUpperLimit(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(linearUpper));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setAngularLowerLimit(SWIGTYPE_p_btVector3 angularLower) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_setAngularLowerLimit(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(angularLower));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public void getAngularLowerLimit(SWIGTYPE_p_btVector3 angularLower) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_getAngularLowerLimit(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(angularLower));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setAngularUpperLimit(SWIGTYPE_p_btVector3 angularUpper) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_setAngularUpperLimit(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(angularUpper));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public void getAngularUpperLimit(SWIGTYPE_p_btVector3 angularUpper) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_getAngularUpperLimit(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(angularUpper));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public btRotationalLimitMotor getRotationalLimitMotor(int index) {
    IntPtr cPtr = BulletDynamicsPINVOKE.btGeneric6DofConstraint_getRotationalLimitMotor(swigCPtr, index);
    btRotationalLimitMotor ret = (cPtr == IntPtr.Zero) ? null : new btRotationalLimitMotor(cPtr, false);
    return ret;
  }

  public btTranslationalLimitMotor getTranslationalLimitMotor() {
    IntPtr cPtr = BulletDynamicsPINVOKE.btGeneric6DofConstraint_getTranslationalLimitMotor(swigCPtr);
    btTranslationalLimitMotor ret = (cPtr == IntPtr.Zero) ? null : new btTranslationalLimitMotor(cPtr, false);
    return ret;
  }

  public void setLimit(int axis, float lo, float hi) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_setLimit(swigCPtr, axis, lo, hi);
  }

  public bool isLimited(int limitIndex) {
    bool ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_isLimited(swigCPtr, limitIndex);
    return ret;
  }

  public virtual void calcAnchorPos() {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_calcAnchorPos(swigCPtr);
  }

  public int get_limit_motor_info2(btRotationalLimitMotor limot, SWIGTYPE_p_btTransform transA, SWIGTYPE_p_btTransform transB, SWIGTYPE_p_btVector3 linVelA, SWIGTYPE_p_btVector3 linVelB, SWIGTYPE_p_btVector3 angVelA, SWIGTYPE_p_btVector3 angVelB, btConstraintInfo2 info, int row, SWIGTYPE_p_btVector3 ax1, int rotational, int rotAllowed) {
    int ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_get_limit_motor_info2__SWIG_0(swigCPtr, btRotationalLimitMotor.getCPtr(limot), SWIGTYPE_p_btTransform.getCPtr(transA), SWIGTYPE_p_btTransform.getCPtr(transB), SWIGTYPE_p_btVector3.getCPtr(linVelA), SWIGTYPE_p_btVector3.getCPtr(linVelB), SWIGTYPE_p_btVector3.getCPtr(angVelA), SWIGTYPE_p_btVector3.getCPtr(angVelB), btConstraintInfo2.getCPtr(info), row, SWIGTYPE_p_btVector3.getCPtr(ax1), rotational, rotAllowed);
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_limit_motor_info2(btRotationalLimitMotor limot, SWIGTYPE_p_btTransform transA, SWIGTYPE_p_btTransform transB, SWIGTYPE_p_btVector3 linVelA, SWIGTYPE_p_btVector3 linVelB, SWIGTYPE_p_btVector3 angVelA, SWIGTYPE_p_btVector3 angVelB, btConstraintInfo2 info, int row, SWIGTYPE_p_btVector3 ax1, int rotational) {
    int ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_get_limit_motor_info2__SWIG_1(swigCPtr, btRotationalLimitMotor.getCPtr(limot), SWIGTYPE_p_btTransform.getCPtr(transA), SWIGTYPE_p_btTransform.getCPtr(transB), SWIGTYPE_p_btVector3.getCPtr(linVelA), SWIGTYPE_p_btVector3.getCPtr(linVelB), SWIGTYPE_p_btVector3.getCPtr(angVelA), SWIGTYPE_p_btVector3.getCPtr(angVelB), btConstraintInfo2.getCPtr(info), row, SWIGTYPE_p_btVector3.getCPtr(ax1), rotational);
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool getUseFrameOffset() {
    bool ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_getUseFrameOffset(swigCPtr);
    return ret;
  }

  public void setUseFrameOffset(bool frameOffsetOnOff) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_setUseFrameOffset(swigCPtr, frameOffsetOnOff);
  }

  public virtual void setParam(int num, float value, int axis) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_setParam__SWIG_0(swigCPtr, num, value, axis);
  }

  public virtual void setParam(int num, float value) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_setParam__SWIG_1(swigCPtr, num, value);
  }

  public virtual float getParam(int num, int axis) {
    float ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_getParam__SWIG_0(swigCPtr, num, axis);
    return ret;
  }

  public virtual float getParam(int num) {
    float ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_getParam__SWIG_1(swigCPtr, num);
    return ret;
  }

  public void setAxis(SWIGTYPE_p_btVector3 axis1, SWIGTYPE_p_btVector3 axis2) {
    BulletDynamicsPINVOKE.btGeneric6DofConstraint_setAxis(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(axis1), SWIGTYPE_p_btVector3.getCPtr(axis2));
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual int calculateSerializeBufferSize() {
    int ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_calculateSerializeBufferSize(swigCPtr);
    return ret;
  }

  public virtual string serialize(SWIGTYPE_p_void dataBuffer, SWIGTYPE_p_btSerializer serializer) {
    string ret = BulletDynamicsPINVOKE.btGeneric6DofConstraint_serialize(swigCPtr, SWIGTYPE_p_void.getCPtr(dataBuffer), SWIGTYPE_p_btSerializer.getCPtr(serializer));
    return ret;
  }

}

}
