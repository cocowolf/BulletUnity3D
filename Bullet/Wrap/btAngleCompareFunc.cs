/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btAngleCompareFunc : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btAngleCompareFunc(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(btAngleCompareFunc obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btAngleCompareFunc() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LinearMathPINVOKE.delete_btAngleCompareFunc(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public btVector3 m_anchor {
    set {
      LinearMathPINVOKE.btAngleCompareFunc_m_anchor_set(swigCPtr, btVector3.getCPtr(value));
    } 
    get {
      IntPtr cPtr = LinearMathPINVOKE.btAngleCompareFunc_m_anchor_get(swigCPtr);
      btVector3 ret = (cPtr == IntPtr.Zero) ? null : new btVector3(cPtr, false);
      return ret;
    } 
  }

  public btAngleCompareFunc(btVector3 anchor) : this(LinearMathPINVOKE.new_btAngleCompareFunc(btVector3.getCPtr(anchor)), true) {
    if (LinearMathPINVOKE.SWIGPendingException.Pending) throw LinearMathPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
