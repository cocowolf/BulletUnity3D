/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btSubSimplexClosestResult : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btSubSimplexClosestResult(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(btSubSimplexClosestResult obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btSubSimplexClosestResult() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletCollisionPINVOKE.delete_btSubSimplexClosestResult(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_btVector3 m_closestPointOnSimplex {
    set {
      BulletCollisionPINVOKE.btSubSimplexClosestResult_m_closestPointOnSimplex_set(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(value));
      if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletCollisionPINVOKE.btSubSimplexClosestResult_m_closestPointOnSimplex_get(swigCPtr), true);
      if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public btUsageBitfield m_usedVertices {
    set {
      BulletCollisionPINVOKE.btSubSimplexClosestResult_m_usedVertices_set(swigCPtr, btUsageBitfield.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletCollisionPINVOKE.btSubSimplexClosestResult_m_usedVertices_get(swigCPtr);
      btUsageBitfield ret = (cPtr == IntPtr.Zero) ? null : new btUsageBitfield(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_barycentricCoords {
    set {
      BulletCollisionPINVOKE.btSubSimplexClosestResult_m_barycentricCoords_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletCollisionPINVOKE.btSubSimplexClosestResult_m_barycentricCoords_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public bool m_degenerate {
    set {
      BulletCollisionPINVOKE.btSubSimplexClosestResult_m_degenerate_set(swigCPtr, value);
    } 
    get {
      bool ret = BulletCollisionPINVOKE.btSubSimplexClosestResult_m_degenerate_get(swigCPtr);
      return ret;
    } 
  }

  public void reset() {
    BulletCollisionPINVOKE.btSubSimplexClosestResult_reset(swigCPtr);
  }

  public bool isValid() {
    bool ret = BulletCollisionPINVOKE.btSubSimplexClosestResult_isValid(swigCPtr);
    return ret;
  }

  public void setBarycentricCoordinates(float a, float b, float c, float d) {
    BulletCollisionPINVOKE.btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_0(swigCPtr, a, b, c, d);
  }

  public void setBarycentricCoordinates(float a, float b, float c) {
    BulletCollisionPINVOKE.btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_1(swigCPtr, a, b, c);
  }

  public void setBarycentricCoordinates(float a, float b) {
    BulletCollisionPINVOKE.btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_2(swigCPtr, a, b);
  }

  public void setBarycentricCoordinates(float a) {
    BulletCollisionPINVOKE.btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_3(swigCPtr, a);
  }

  public void setBarycentricCoordinates() {
    BulletCollisionPINVOKE.btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_4(swigCPtr);
  }

  public btSubSimplexClosestResult() : this(BulletCollisionPINVOKE.new_btSubSimplexClosestResult(), true) {
  }

}

}
