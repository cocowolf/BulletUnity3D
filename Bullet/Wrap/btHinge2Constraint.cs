/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btHinge2Constraint : btGeneric6DofSpringConstraint {
  private HandleRef swigCPtr;

  internal btHinge2Constraint(IntPtr cPtr, bool cMemoryOwn) : base(BulletDynamicsPINVOKE.btHinge2Constraint_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(btHinge2Constraint obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btHinge2Constraint() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletDynamicsPINVOKE.delete_btHinge2Constraint(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btHinge2Constraint(btRigidBody rbA, btRigidBody rbB, SWIGTYPE_p_btVector3 anchor, SWIGTYPE_p_btVector3 axis1, SWIGTYPE_p_btVector3 axis2) : this(BulletDynamicsPINVOKE.new_btHinge2Constraint(btRigidBody.getCPtr(rbA), btRigidBody.getCPtr(rbB), SWIGTYPE_p_btVector3.getCPtr(anchor), SWIGTYPE_p_btVector3.getCPtr(axis1), SWIGTYPE_p_btVector3.getCPtr(axis2)), true) {
    if (BulletDynamicsPINVOKE.SWIGPendingException.Pending) throw BulletDynamicsPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_btVector3 getAnchor() {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletDynamicsPINVOKE.btHinge2Constraint_getAnchor(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_btVector3 getAnchor2() {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletDynamicsPINVOKE.btHinge2Constraint_getAnchor2(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_btVector3 getAxis1() {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletDynamicsPINVOKE.btHinge2Constraint_getAxis1(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_btVector3 getAxis2() {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletDynamicsPINVOKE.btHinge2Constraint_getAxis2(swigCPtr), false);
    return ret;
  }

  public float getAngle1() {
    float ret = BulletDynamicsPINVOKE.btHinge2Constraint_getAngle1(swigCPtr);
    return ret;
  }

  public float getAngle2() {
    float ret = BulletDynamicsPINVOKE.btHinge2Constraint_getAngle2(swigCPtr);
    return ret;
  }

  public void setUpperLimit(float ang1max) {
    BulletDynamicsPINVOKE.btHinge2Constraint_setUpperLimit(swigCPtr, ang1max);
  }

  public void setLowerLimit(float ang1min) {
    BulletDynamicsPINVOKE.btHinge2Constraint_setLowerLimit(swigCPtr, ang1min);
  }

}

}
