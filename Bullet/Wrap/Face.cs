/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class Face : Feature {
  private HandleRef swigCPtr;

  internal Face(IntPtr cPtr, bool cMemoryOwn) : base(BulletSoftBodyPINVOKE.Face_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Face obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Face() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletSoftBodyPINVOKE.delete_Face(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public SWIGTYPE_p_p_Node m_n {
    set {
      BulletSoftBodyPINVOKE.Face_m_n_set(swigCPtr, SWIGTYPE_p_p_Node.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.Face_m_n_get(swigCPtr);
      SWIGTYPE_p_p_Node ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_Node(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3 m_normal {
    set {
      BulletSoftBodyPINVOKE.Face_m_normal_set(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.Face_m_normal_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float m_ra {
    set {
      BulletSoftBodyPINVOKE.Face_m_ra_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Face_m_ra_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_btDbvtNode m_leaf {
    set {
      BulletSoftBodyPINVOKE.Face_m_leaf_set(swigCPtr, SWIGTYPE_p_btDbvtNode.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.Face_m_leaf_get(swigCPtr);
      SWIGTYPE_p_btDbvtNode ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btDbvtNode(cPtr, false);
      return ret;
    } 
  }

  public Face() : this(BulletSoftBodyPINVOKE.new_Face(), true) {
  }

}

}
