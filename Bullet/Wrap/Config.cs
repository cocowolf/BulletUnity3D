/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class Config : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Config(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Config obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Config() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletSoftBodyPINVOKE.delete_Config(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public eAeroModel._ aeromodel {
    set {
      BulletSoftBodyPINVOKE.Config_aeromodel_set(swigCPtr, (int)value);
    } 
    get {
      eAeroModel._ ret = (eAeroModel._)BulletSoftBodyPINVOKE.Config_aeromodel_get(swigCPtr);
      return ret;
    } 
  }

  public float kVCF {
    set {
      BulletSoftBodyPINVOKE.Config_kVCF_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kVCF_get(swigCPtr);
      return ret;
    } 
  }

  public float kDP {
    set {
      BulletSoftBodyPINVOKE.Config_kDP_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kDP_get(swigCPtr);
      return ret;
    } 
  }

  public float kDG {
    set {
      BulletSoftBodyPINVOKE.Config_kDG_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kDG_get(swigCPtr);
      return ret;
    } 
  }

  public float kLF {
    set {
      BulletSoftBodyPINVOKE.Config_kLF_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kLF_get(swigCPtr);
      return ret;
    } 
  }

  public float kPR {
    set {
      BulletSoftBodyPINVOKE.Config_kPR_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kPR_get(swigCPtr);
      return ret;
    } 
  }

  public float kVC {
    set {
      BulletSoftBodyPINVOKE.Config_kVC_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kVC_get(swigCPtr);
      return ret;
    } 
  }

  public float kDF {
    set {
      BulletSoftBodyPINVOKE.Config_kDF_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kDF_get(swigCPtr);
      return ret;
    } 
  }

  public float kMT {
    set {
      BulletSoftBodyPINVOKE.Config_kMT_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kMT_get(swigCPtr);
      return ret;
    } 
  }

  public float kCHR {
    set {
      BulletSoftBodyPINVOKE.Config_kCHR_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kCHR_get(swigCPtr);
      return ret;
    } 
  }

  public float kKHR {
    set {
      BulletSoftBodyPINVOKE.Config_kKHR_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kKHR_get(swigCPtr);
      return ret;
    } 
  }

  public float kSHR {
    set {
      BulletSoftBodyPINVOKE.Config_kSHR_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kSHR_get(swigCPtr);
      return ret;
    } 
  }

  public float kAHR {
    set {
      BulletSoftBodyPINVOKE.Config_kAHR_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kAHR_get(swigCPtr);
      return ret;
    } 
  }

  public float kSRHR_CL {
    set {
      BulletSoftBodyPINVOKE.Config_kSRHR_CL_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kSRHR_CL_get(swigCPtr);
      return ret;
    } 
  }

  public float kSKHR_CL {
    set {
      BulletSoftBodyPINVOKE.Config_kSKHR_CL_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kSKHR_CL_get(swigCPtr);
      return ret;
    } 
  }

  public float kSSHR_CL {
    set {
      BulletSoftBodyPINVOKE.Config_kSSHR_CL_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kSSHR_CL_get(swigCPtr);
      return ret;
    } 
  }

  public float kSR_SPLT_CL {
    set {
      BulletSoftBodyPINVOKE.Config_kSR_SPLT_CL_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kSR_SPLT_CL_get(swigCPtr);
      return ret;
    } 
  }

  public float kSK_SPLT_CL {
    set {
      BulletSoftBodyPINVOKE.Config_kSK_SPLT_CL_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kSK_SPLT_CL_get(swigCPtr);
      return ret;
    } 
  }

  public float kSS_SPLT_CL {
    set {
      BulletSoftBodyPINVOKE.Config_kSS_SPLT_CL_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_kSS_SPLT_CL_get(swigCPtr);
      return ret;
    } 
  }

  public float maxvolume {
    set {
      BulletSoftBodyPINVOKE.Config_maxvolume_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_maxvolume_get(swigCPtr);
      return ret;
    } 
  }

  public float timescale {
    set {
      BulletSoftBodyPINVOKE.Config_timescale_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.Config_timescale_get(swigCPtr);
      return ret;
    } 
  }

  public int viterations {
    set {
      BulletSoftBodyPINVOKE.Config_viterations_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.Config_viterations_get(swigCPtr);
      return ret;
    } 
  }

  public int piterations {
    set {
      BulletSoftBodyPINVOKE.Config_piterations_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.Config_piterations_get(swigCPtr);
      return ret;
    } 
  }

  public int diterations {
    set {
      BulletSoftBodyPINVOKE.Config_diterations_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.Config_diterations_get(swigCPtr);
      return ret;
    } 
  }

  public int citerations {
    set {
      BulletSoftBodyPINVOKE.Config_citerations_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.Config_citerations_get(swigCPtr);
      return ret;
    } 
  }

  public int collisions {
    set {
      BulletSoftBodyPINVOKE.Config_collisions_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.Config_collisions_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_tVSolverArray m_vsequence {
    set {
      BulletSoftBodyPINVOKE.Config_m_vsequence_set(swigCPtr, SWIGTYPE_p_tVSolverArray.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_tVSolverArray ret = new SWIGTYPE_p_tVSolverArray(BulletSoftBodyPINVOKE.Config_m_vsequence_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_tPSolverArray m_psequence {
    set {
      BulletSoftBodyPINVOKE.Config_m_psequence_set(swigCPtr, SWIGTYPE_p_tPSolverArray.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_tPSolverArray ret = new SWIGTYPE_p_tPSolverArray(BulletSoftBodyPINVOKE.Config_m_psequence_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_tPSolverArray m_dsequence {
    set {
      BulletSoftBodyPINVOKE.Config_m_dsequence_set(swigCPtr, SWIGTYPE_p_tPSolverArray.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_tPSolverArray ret = new SWIGTYPE_p_tPSolverArray(BulletSoftBodyPINVOKE.Config_m_dsequence_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public Config() : this(BulletSoftBodyPINVOKE.new_Config(), true) {
  }

}

}
