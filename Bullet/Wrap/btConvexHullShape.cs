/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btConvexHullShape : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;
  private SWIGTYPE_p_btCollisionShape swigWrapPtr;

  internal btConvexHullShape(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
    swigWrapPtr = new SWIGTYPE_p_btCollisionShape(cPtr, true);
  }

  internal static HandleRef getCPtr(btConvexHullShape obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public SWIGTYPE_p_btCollisionShape GetSwigPtr()
  {
      return swigWrapPtr;
  }

  ~btConvexHullShape() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletCollisionPINVOKE.delete_btConvexHullShape(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
        swigWrapPtr = new SWIGTYPE_p_btCollisionShape(IntPtr.Zero, true);
      }
      GC.SuppressFinalize(this);
    }
  }

  public btConvexHullShape(float[] points, int numPoints, int stride) : this(BulletCollisionPINVOKE.new_btConvexHullShape__SWIG_0(points, numPoints, stride), true) {
  }

  public btConvexHullShape(float[] points, int numPoints) : this(BulletCollisionPINVOKE.new_btConvexHullShape__SWIG_1(points, numPoints), true) {
  }

  public btConvexHullShape(float[] points) : this(BulletCollisionPINVOKE.new_btConvexHullShape__SWIG_2(points), true) {
  }

  public btConvexHullShape() : this(BulletCollisionPINVOKE.new_btConvexHullShape__SWIG_3(), true) {
  }

  public void addPoint(SWIGTYPE_p_btVector3 point) {
    BulletCollisionPINVOKE.btConvexHullShape_addPoint(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(point));
    if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_btVector3 getUnscaledPoints() {
    IntPtr cPtr = BulletCollisionPINVOKE.btConvexHullShape_getUnscaledPoints__SWIG_0(swigCPtr);
    SWIGTYPE_p_btVector3 ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btVector3(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_btVector3 getPoints() {
    IntPtr cPtr = BulletCollisionPINVOKE.btConvexHullShape_getPoints(swigCPtr);
    SWIGTYPE_p_btVector3 ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btVector3(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_btVector3 getScaledPoint(int i) {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletCollisionPINVOKE.btConvexHullShape_getScaledPoint(swigCPtr, i), true);
    return ret;
  }

  public int getNumPoints() {
    int ret = BulletCollisionPINVOKE.btConvexHullShape_getNumPoints(swigCPtr);
    return ret;
  }

  public virtual SWIGTYPE_p_btVector3 localGetSupportingVertex(SWIGTYPE_p_btVector3 vec) {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletCollisionPINVOKE.btConvexHullShape_localGetSupportingVertex(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(vec)), true);
    if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_btVector3 localGetSupportingVertexWithoutMargin(SWIGTYPE_p_btVector3 vec) {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletCollisionPINVOKE.btConvexHullShape_localGetSupportingVertexWithoutMargin(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(vec)), true);
    if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void batchedUnitVectorGetSupportingVertexWithoutMargin(SWIGTYPE_p_btVector3 vectors, SWIGTYPE_p_btVector3 supportVerticesOut, int numVectors) {
    BulletCollisionPINVOKE.btConvexHullShape_batchedUnitVectorGetSupportingVertexWithoutMargin(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(vectors), SWIGTYPE_p_btVector3.getCPtr(supportVerticesOut), numVectors);
  }

  public virtual void project(SWIGTYPE_p_btTransform trans, SWIGTYPE_p_btVector3 dir, SWIGTYPE_p_float minProj, SWIGTYPE_p_float maxProj, SWIGTYPE_p_btVector3 witnesPtMin, SWIGTYPE_p_btVector3 witnesPtMax) {
    BulletCollisionPINVOKE.btConvexHullShape_project(swigCPtr, SWIGTYPE_p_btTransform.getCPtr(trans), SWIGTYPE_p_btVector3.getCPtr(dir), SWIGTYPE_p_float.getCPtr(minProj), SWIGTYPE_p_float.getCPtr(maxProj), SWIGTYPE_p_btVector3.getCPtr(witnesPtMin), SWIGTYPE_p_btVector3.getCPtr(witnesPtMax));
    if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual string getName() {
    string ret = BulletCollisionPINVOKE.btConvexHullShape_getName(swigCPtr);
    return ret;
  }

  public virtual int getNumVertices() {
    int ret = BulletCollisionPINVOKE.btConvexHullShape_getNumVertices(swigCPtr);
    return ret;
  }

  public virtual int getNumEdges() {
    int ret = BulletCollisionPINVOKE.btConvexHullShape_getNumEdges(swigCPtr);
    return ret;
  }

  public virtual void getEdge(int i, SWIGTYPE_p_btVector3 pa, SWIGTYPE_p_btVector3 pb) {
    BulletCollisionPINVOKE.btConvexHullShape_getEdge(swigCPtr, i, SWIGTYPE_p_btVector3.getCPtr(pa), SWIGTYPE_p_btVector3.getCPtr(pb));
    if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void getVertex(int i, SWIGTYPE_p_btVector3 vtx) {
    BulletCollisionPINVOKE.btConvexHullShape_getVertex(swigCPtr, i, SWIGTYPE_p_btVector3.getCPtr(vtx));
    if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual int getNumPlanes() {
    int ret = BulletCollisionPINVOKE.btConvexHullShape_getNumPlanes(swigCPtr);
    return ret;
  }

  public virtual void getPlane(SWIGTYPE_p_btVector3 planeNormal, SWIGTYPE_p_btVector3 planeSupport, int i) {
    BulletCollisionPINVOKE.btConvexHullShape_getPlane(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(planeNormal), SWIGTYPE_p_btVector3.getCPtr(planeSupport), i);
    if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool isInside(SWIGTYPE_p_btVector3 pt, float tolerance) {
    bool ret = BulletCollisionPINVOKE.btConvexHullShape_isInside(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(pt), tolerance);
    if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public btPolyhedralConvexShape GetPolihedralConvexShape() {
    IntPtr cPtr = BulletCollisionPINVOKE.btConvexHullShape_GetPolihedralConvexShape(swigCPtr);
    btPolyhedralConvexShape ret = (cPtr == IntPtr.Zero) ? null : new btPolyhedralConvexShape(cPtr, false);
    return ret;
  }

  public virtual void setLocalScaling(SWIGTYPE_p_btVector3 scaling) {
    BulletCollisionPINVOKE.btConvexHullShape_setLocalScaling(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(scaling));
    if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual int calculateSerializeBufferSize() {
    int ret = BulletCollisionPINVOKE.btConvexHullShape_calculateSerializeBufferSize(swigCPtr);
    return ret;
  }

  public virtual string serialize(SWIGTYPE_p_void dataBuffer, SWIGTYPE_p_btSerializer serializer) {
    string ret = BulletCollisionPINVOKE.btConvexHullShape_serialize(swigCPtr, SWIGTYPE_p_void.getCPtr(dataBuffer), SWIGTYPE_p_btSerializer.getCPtr(serializer));
    return ret;
  }

}

}
