/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class SoftBodyConfigData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SoftBodyConfigData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SoftBodyConfigData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SoftBodyConfigData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletSoftBodyPINVOKE.delete_SoftBodyConfigData(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public int m_aeroModel {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_aeroModel_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_aeroModel_get(swigCPtr);
      return ret;
    } 
  }

  public float m_baumgarte {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_baumgarte_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_baumgarte_get(swigCPtr);
      return ret;
    } 
  }

  public float m_damping {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_damping_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_damping_get(swigCPtr);
      return ret;
    } 
  }

  public float m_drag {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_drag_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_drag_get(swigCPtr);
      return ret;
    } 
  }

  public float m_lift {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_lift_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_lift_get(swigCPtr);
      return ret;
    } 
  }

  public float m_pressure {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_pressure_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_pressure_get(swigCPtr);
      return ret;
    } 
  }

  public float m_volume {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_volume_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_volume_get(swigCPtr);
      return ret;
    } 
  }

  public float m_dynamicFriction {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_dynamicFriction_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_dynamicFriction_get(swigCPtr);
      return ret;
    } 
  }

  public float m_poseMatch {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_poseMatch_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_poseMatch_get(swigCPtr);
      return ret;
    } 
  }

  public float m_rigidContactHardness {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_rigidContactHardness_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_rigidContactHardness_get(swigCPtr);
      return ret;
    } 
  }

  public float m_kineticContactHardness {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_kineticContactHardness_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_kineticContactHardness_get(swigCPtr);
      return ret;
    } 
  }

  public float m_softContactHardness {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softContactHardness_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softContactHardness_get(swigCPtr);
      return ret;
    } 
  }

  public float m_anchorHardness {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_anchorHardness_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_anchorHardness_get(swigCPtr);
      return ret;
    } 
  }

  public float m_softRigidClusterHardness {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softRigidClusterHardness_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softRigidClusterHardness_get(swigCPtr);
      return ret;
    } 
  }

  public float m_softKineticClusterHardness {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softKineticClusterHardness_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softKineticClusterHardness_get(swigCPtr);
      return ret;
    } 
  }

  public float m_softSoftClusterHardness {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softSoftClusterHardness_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softSoftClusterHardness_get(swigCPtr);
      return ret;
    } 
  }

  public float m_softRigidClusterImpulseSplit {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softRigidClusterImpulseSplit_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softRigidClusterImpulseSplit_get(swigCPtr);
      return ret;
    } 
  }

  public float m_softKineticClusterImpulseSplit {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softKineticClusterImpulseSplit_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softKineticClusterImpulseSplit_get(swigCPtr);
      return ret;
    } 
  }

  public float m_softSoftClusterImpulseSplit {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softSoftClusterImpulseSplit_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_softSoftClusterImpulseSplit_get(swigCPtr);
      return ret;
    } 
  }

  public float m_maxVolume {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_maxVolume_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_maxVolume_get(swigCPtr);
      return ret;
    } 
  }

  public float m_timeScale {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_timeScale_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_timeScale_get(swigCPtr);
      return ret;
    } 
  }

  public int m_velocityIterations {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_velocityIterations_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_velocityIterations_get(swigCPtr);
      return ret;
    } 
  }

  public int m_positionIterations {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_positionIterations_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_positionIterations_get(swigCPtr);
      return ret;
    } 
  }

  public int m_driftIterations {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_driftIterations_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_driftIterations_get(swigCPtr);
      return ret;
    } 
  }

  public int m_clusterIterations {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_clusterIterations_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_clusterIterations_get(swigCPtr);
      return ret;
    } 
  }

  public int m_collisionFlags {
    set {
      BulletSoftBodyPINVOKE.SoftBodyConfigData_m_collisionFlags_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.SoftBodyConfigData_m_collisionFlags_get(swigCPtr);
      return ret;
    } 
  }

  public SoftBodyConfigData() : this(BulletSoftBodyPINVOKE.new_SoftBodyConfigData(), true) {
  }

}

}
