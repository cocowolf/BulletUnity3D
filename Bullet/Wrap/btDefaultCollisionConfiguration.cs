/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btDefaultCollisionConfiguration : IDisposable {
  private HandleRef swigCPtr;
  private SWIGTYPE_p_btCollisionConfiguration swigWrapPtr;
  protected bool swigCMemOwn;

  internal btDefaultCollisionConfiguration(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
    swigWrapPtr = new SWIGTYPE_p_btCollisionConfiguration(cPtr, true);
  }

  internal static HandleRef getCPtr(btDefaultCollisionConfiguration obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btDefaultCollisionConfiguration() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletCollisionPINVOKE.delete_btDefaultCollisionConfiguration(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
        swigWrapPtr = new SWIGTYPE_p_btCollisionConfiguration(IntPtr.Zero, true);
      }
      GC.SuppressFinalize(this);
    }
  }

  public btDefaultCollisionConfiguration(btDefaultCollisionConstructionInfo constructionInfo) : this(BulletCollisionPINVOKE.new_btDefaultCollisionConfiguration__SWIG_0(btDefaultCollisionConstructionInfo.getCPtr(constructionInfo)), true) {
    if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
  }

  public btDefaultCollisionConfiguration() : this(BulletCollisionPINVOKE.new_btDefaultCollisionConfiguration__SWIG_1(), true) {
  }

  public virtual SWIGTYPE_p_btPoolAllocator getPersistentManifoldPool() {
    IntPtr cPtr = BulletCollisionPINVOKE.btDefaultCollisionConfiguration_getPersistentManifoldPool(swigCPtr);
    SWIGTYPE_p_btPoolAllocator ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btPoolAllocator(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_btPoolAllocator getCollisionAlgorithmPool() {
    IntPtr cPtr = BulletCollisionPINVOKE.btDefaultCollisionConfiguration_getCollisionAlgorithmPool(swigCPtr);
    SWIGTYPE_p_btPoolAllocator ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btPoolAllocator(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_btStackAlloc getStackAllocator() {
    IntPtr cPtr = BulletCollisionPINVOKE.btDefaultCollisionConfiguration_getStackAllocator(swigCPtr);
    SWIGTYPE_p_btStackAlloc ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btStackAlloc(cPtr, false);
    return ret;
  }

  public virtual btVoronoiSimplexSolver getSimplexSolver() {
    IntPtr cPtr = BulletCollisionPINVOKE.btDefaultCollisionConfiguration_getSimplexSolver(swigCPtr);
    btVoronoiSimplexSolver ret = (cPtr == IntPtr.Zero) ? null : new btVoronoiSimplexSolver(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_btCollisionAlgorithmCreateFunc getCollisionAlgorithmCreateFunc(int proxyType0, int proxyType1) {
    IntPtr cPtr = BulletCollisionPINVOKE.btDefaultCollisionConfiguration_getCollisionAlgorithmCreateFunc(swigCPtr, proxyType0, proxyType1);
    SWIGTYPE_p_btCollisionAlgorithmCreateFunc ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btCollisionAlgorithmCreateFunc(cPtr, false);
    return ret;
  }

  public void setConvexConvexMultipointIterations(int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
    BulletCollisionPINVOKE.btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_0(swigCPtr, numPerturbationIterations, minimumPointsPerturbationThreshold);
  }

  public void setConvexConvexMultipointIterations(int numPerturbationIterations) {
    BulletCollisionPINVOKE.btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_1(swigCPtr, numPerturbationIterations);
  }

  public void setConvexConvexMultipointIterations() {
    BulletCollisionPINVOKE.btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_2(swigCPtr);
  }

  public void setPlaneConvexMultipointIterations(int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
    BulletCollisionPINVOKE.btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_0(swigCPtr, numPerturbationIterations, minimumPointsPerturbationThreshold);
  }

  public void setPlaneConvexMultipointIterations(int numPerturbationIterations) {
    BulletCollisionPINVOKE.btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_1(swigCPtr, numPerturbationIterations);
  }

  public void setPlaneConvexMultipointIterations() {
    BulletCollisionPINVOKE.btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_2(swigCPtr);
  }

  public SWIGTYPE_p_btCollisionConfiguration GetSwigPtr()
  {
      return swigWrapPtr;
  }
}

}
