/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btDefaultMotionState : IDisposable {
  private HandleRef swigCPtr;
  private SWIGTYPE_p_btMotionState swigWrapPtr;
  protected bool swigCMemOwn;

  public SWIGTYPE_p_btMotionState GetSwigPtr()
  {
      return swigWrapPtr;
  }


  internal btDefaultMotionState(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
    swigWrapPtr = new SWIGTYPE_p_btMotionState(cPtr, true);
  }

  internal static HandleRef getCPtr(btDefaultMotionState obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btDefaultMotionState() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LinearMathPINVOKE.delete_btDefaultMotionState(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
        swigWrapPtr = new SWIGTYPE_p_btMotionState(IntPtr.Zero, true);
      }
      GC.SuppressFinalize(this);
    }
  }

  public btTransform m_graphicsWorldTrans {
    set {
      LinearMathPINVOKE.btDefaultMotionState_m_graphicsWorldTrans_set(swigCPtr, btTransform.getCPtr(value));
    } 
    get {
      IntPtr cPtr = LinearMathPINVOKE.btDefaultMotionState_m_graphicsWorldTrans_get(swigCPtr);
      btTransform ret = (cPtr == IntPtr.Zero) ? null : new btTransform(cPtr, false);
      return ret;
    } 
  }

  public btTransform m_centerOfMassOffset {
    set {
      LinearMathPINVOKE.btDefaultMotionState_m_centerOfMassOffset_set(swigCPtr, btTransform.getCPtr(value));
    } 
    get {
      IntPtr cPtr = LinearMathPINVOKE.btDefaultMotionState_m_centerOfMassOffset_get(swigCPtr);
      btTransform ret = (cPtr == IntPtr.Zero) ? null : new btTransform(cPtr, false);
      return ret;
    } 
  }

  public btTransform m_startWorldTrans {
    set {
      LinearMathPINVOKE.btDefaultMotionState_m_startWorldTrans_set(swigCPtr, btTransform.getCPtr(value));
    } 
    get {
      IntPtr cPtr = LinearMathPINVOKE.btDefaultMotionState_m_startWorldTrans_get(swigCPtr);
      btTransform ret = (cPtr == IntPtr.Zero) ? null : new btTransform(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_void m_userPointer {
    set {
      LinearMathPINVOKE.btDefaultMotionState_m_userPointer_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      IntPtr cPtr = LinearMathPINVOKE.btDefaultMotionState_m_userPointer_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public btDefaultMotionState(btTransform startTrans, btTransform centerOfMassOffset) : this(LinearMathPINVOKE.new_btDefaultMotionState__SWIG_0(btTransform.getCPtr(startTrans), btTransform.getCPtr(centerOfMassOffset)), true) {
    if (LinearMathPINVOKE.SWIGPendingException.Pending) throw LinearMathPINVOKE.SWIGPendingException.Retrieve();
  }

  public btDefaultMotionState(btTransform startTrans) : this(LinearMathPINVOKE.new_btDefaultMotionState__SWIG_1(btTransform.getCPtr(startTrans)), true) {
    if (LinearMathPINVOKE.SWIGPendingException.Pending) throw LinearMathPINVOKE.SWIGPendingException.Retrieve();
  }

  public btDefaultMotionState() : this(LinearMathPINVOKE.new_btDefaultMotionState__SWIG_2(), true) {
  }

  public virtual void getWorldTransform(btTransform centerOfMassWorldTrans) {
    LinearMathPINVOKE.btDefaultMotionState_getWorldTransform(swigCPtr, btTransform.getCPtr(centerOfMassWorldTrans));
    if (LinearMathPINVOKE.SWIGPendingException.Pending) throw LinearMathPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void setWorldTransform(btTransform centerOfMassWorldTrans) {
    LinearMathPINVOKE.btDefaultMotionState_setWorldTransform(swigCPtr, btTransform.getCPtr(centerOfMassWorldTrans));
    if (LinearMathPINVOKE.SWIGPendingException.Pending) throw LinearMathPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
