/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btConvexPolyhedron : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btConvexPolyhedron(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(btConvexPolyhedron obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btConvexPolyhedron() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletCollisionPINVOKE.delete_btConvexPolyhedron(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public btConvexPolyhedron() : this(BulletCollisionPINVOKE.new_btConvexPolyhedron(), true) {
  }

  public btAlignedObjectArrayVector3 m_vertices {
    set {
      BulletCollisionPINVOKE.btConvexPolyhedron_m_vertices_set(swigCPtr, btAlignedObjectArrayVector3.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletCollisionPINVOKE.btConvexPolyhedron_m_vertices_get(swigCPtr);
      btAlignedObjectArrayVector3 ret = (cPtr == IntPtr.Zero) ? null : new btAlignedObjectArrayVector3(cPtr, false);
      return ret;
    } 
  }

  public btAlignedObjectArraybtFace m_faces {
    set {
      BulletCollisionPINVOKE.btConvexPolyhedron_m_faces_set(swigCPtr, btAlignedObjectArraybtFace.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletCollisionPINVOKE.btConvexPolyhedron_m_faces_get(swigCPtr);
      btAlignedObjectArraybtFace ret = (cPtr == IntPtr.Zero) ? null : new btAlignedObjectArraybtFace(cPtr, false);
      return ret;
    } 
  }

  public btAlignedObjectArrayVector3 m_uniqueEdges {
    set {
      BulletCollisionPINVOKE.btConvexPolyhedron_m_uniqueEdges_set(swigCPtr, btAlignedObjectArrayVector3.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletCollisionPINVOKE.btConvexPolyhedron_m_uniqueEdges_get(swigCPtr);
      btAlignedObjectArrayVector3 ret = (cPtr == IntPtr.Zero) ? null : new btAlignedObjectArrayVector3(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3 m_localCenter {
    set {
      BulletCollisionPINVOKE.btConvexPolyhedron_m_localCenter_set(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(value));
      if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletCollisionPINVOKE.btConvexPolyhedron_m_localCenter_get(swigCPtr), true);
      if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3 m_extents {
    set {
      BulletCollisionPINVOKE.btConvexPolyhedron_m_extents_set(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(value));
      if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletCollisionPINVOKE.btConvexPolyhedron_m_extents_get(swigCPtr), true);
      if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float m_radius {
    set {
      BulletCollisionPINVOKE.btConvexPolyhedron_m_radius_set(swigCPtr, value);
    } 
    get {
      float ret = BulletCollisionPINVOKE.btConvexPolyhedron_m_radius_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3 mC {
    set {
      BulletCollisionPINVOKE.btConvexPolyhedron_mC_set(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(value));
      if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletCollisionPINVOKE.btConvexPolyhedron_mC_get(swigCPtr), true);
      if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3 mE {
    set {
      BulletCollisionPINVOKE.btConvexPolyhedron_mE_set(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(value));
      if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletCollisionPINVOKE.btConvexPolyhedron_mE_get(swigCPtr), true);
      if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public void initialize() {
    BulletCollisionPINVOKE.btConvexPolyhedron_initialize(swigCPtr);
  }

  public bool testContainment() {
    bool ret = BulletCollisionPINVOKE.btConvexPolyhedron_testContainment(swigCPtr);
    return ret;
  }

  public void project(SWIGTYPE_p_btTransform trans, SWIGTYPE_p_btVector3 dir, SWIGTYPE_p_float minProj, SWIGTYPE_p_float maxProj, SWIGTYPE_p_btVector3 witnesPtMin, SWIGTYPE_p_btVector3 witnesPtMax) {
    BulletCollisionPINVOKE.btConvexPolyhedron_project(swigCPtr, SWIGTYPE_p_btTransform.getCPtr(trans), SWIGTYPE_p_btVector3.getCPtr(dir), SWIGTYPE_p_float.getCPtr(minProj), SWIGTYPE_p_float.getCPtr(maxProj), SWIGTYPE_p_btVector3.getCPtr(witnesPtMin), SWIGTYPE_p_btVector3.getCPtr(witnesPtMax));
    if (BulletCollisionPINVOKE.SWIGPendingException.Pending) throw BulletCollisionPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
