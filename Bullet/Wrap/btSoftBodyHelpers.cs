/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btSoftBodyHelpers : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btSoftBodyHelpers(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(btSoftBodyHelpers obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btSoftBodyHelpers() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletSoftBodyPINVOKE.delete_btSoftBodyHelpers(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public static void Draw(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw, int drawflags) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_Draw__SWIG_0(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw), drawflags);
  }

  public static void Draw(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_Draw__SWIG_1(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw));
  }

  public static void DrawInfos(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw, bool masses, bool areas, bool stress) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_DrawInfos(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw), masses, areas, stress);
  }

  public static void DrawNodeTree(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw, int mindepth, int maxdepth) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_DrawNodeTree__SWIG_0(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw), mindepth, maxdepth);
  }

  public static void DrawNodeTree(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw, int mindepth) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_DrawNodeTree__SWIG_1(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw), mindepth);
  }

  public static void DrawNodeTree(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_DrawNodeTree__SWIG_2(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw));
  }

  public static void DrawFaceTree(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw, int mindepth, int maxdepth) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_DrawFaceTree__SWIG_0(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw), mindepth, maxdepth);
  }

  public static void DrawFaceTree(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw, int mindepth) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_DrawFaceTree__SWIG_1(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw), mindepth);
  }

  public static void DrawFaceTree(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_DrawFaceTree__SWIG_2(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw));
  }

  public static void DrawClusterTree(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw, int mindepth, int maxdepth) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_DrawClusterTree__SWIG_0(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw), mindepth, maxdepth);
  }

  public static void DrawClusterTree(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw, int mindepth) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_DrawClusterTree__SWIG_1(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw), mindepth);
  }

  public static void DrawClusterTree(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_DrawClusterTree__SWIG_2(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw));
  }

  public static void DrawFrame(btSoftBody psb, SWIGTYPE_p_btIDebugDraw idraw) {
    BulletSoftBodyPINVOKE.btSoftBodyHelpers_DrawFrame(btSoftBody.getCPtr(psb), SWIGTYPE_p_btIDebugDraw.getCPtr(idraw));
  }

  public static btSoftBody CreateRope(btSoftBodyWorldInfo worldInfo, SWIGTYPE_p_btVector3 from, SWIGTYPE_p_btVector3 to, int res, int fixeds) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreateRope(btSoftBodyWorldInfo.getCPtr(worldInfo), SWIGTYPE_p_btVector3.getCPtr(from), SWIGTYPE_p_btVector3.getCPtr(to), res, fixeds);
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static btSoftBody CreatePatch(btSoftBodyWorldInfo worldInfo, SWIGTYPE_p_btVector3 corner00, SWIGTYPE_p_btVector3 corner10, SWIGTYPE_p_btVector3 corner01, SWIGTYPE_p_btVector3 corner11, int resx, int resy, int fixeds, bool gendiags) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreatePatch(btSoftBodyWorldInfo.getCPtr(worldInfo), SWIGTYPE_p_btVector3.getCPtr(corner00), SWIGTYPE_p_btVector3.getCPtr(corner10), SWIGTYPE_p_btVector3.getCPtr(corner01), SWIGTYPE_p_btVector3.getCPtr(corner11), resx, resy, fixeds, gendiags);
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static btSoftBody CreatePatchUV(btSoftBodyWorldInfo worldInfo, SWIGTYPE_p_btVector3 corner00, SWIGTYPE_p_btVector3 corner10, SWIGTYPE_p_btVector3 corner01, SWIGTYPE_p_btVector3 corner11, int resx, int resy, int fixeds, bool gendiags, SWIGTYPE_p_float tex_coords) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreatePatchUV__SWIG_0(btSoftBodyWorldInfo.getCPtr(worldInfo), SWIGTYPE_p_btVector3.getCPtr(corner00), SWIGTYPE_p_btVector3.getCPtr(corner10), SWIGTYPE_p_btVector3.getCPtr(corner01), SWIGTYPE_p_btVector3.getCPtr(corner11), resx, resy, fixeds, gendiags, SWIGTYPE_p_float.getCPtr(tex_coords));
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static btSoftBody CreatePatchUV(btSoftBodyWorldInfo worldInfo, SWIGTYPE_p_btVector3 corner00, SWIGTYPE_p_btVector3 corner10, SWIGTYPE_p_btVector3 corner01, SWIGTYPE_p_btVector3 corner11, int resx, int resy, int fixeds, bool gendiags) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreatePatchUV__SWIG_1(btSoftBodyWorldInfo.getCPtr(worldInfo), SWIGTYPE_p_btVector3.getCPtr(corner00), SWIGTYPE_p_btVector3.getCPtr(corner10), SWIGTYPE_p_btVector3.getCPtr(corner01), SWIGTYPE_p_btVector3.getCPtr(corner11), resx, resy, fixeds, gendiags);
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static float CalculateUV(int resx, int resy, int ix, int iy, int id) {
    float ret = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CalculateUV(resx, resy, ix, iy, id);
    return ret;
  }

  public static btSoftBody CreateEllipsoid(btSoftBodyWorldInfo worldInfo, SWIGTYPE_p_btVector3 center, SWIGTYPE_p_btVector3 radius, int res) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreateEllipsoid(btSoftBodyWorldInfo.getCPtr(worldInfo), SWIGTYPE_p_btVector3.getCPtr(center), SWIGTYPE_p_btVector3.getCPtr(radius), res);
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static btSoftBody CreateFromTriMesh(btSoftBodyWorldInfo worldInfo, float[] vertices, int[] triangles, int ntriangles, bool randomizeConstraints) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreateFromTriMesh__SWIG_0(btSoftBodyWorldInfo.getCPtr(worldInfo), vertices, triangles, ntriangles, randomizeConstraints);
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static btSoftBody CreateFromTriMesh(btSoftBodyWorldInfo worldInfo, float[] vertices, int[] triangles, int ntriangles) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreateFromTriMesh__SWIG_1(btSoftBodyWorldInfo.getCPtr(worldInfo), vertices, triangles, ntriangles);
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static btSoftBody CreateFromConvexHull(btSoftBodyWorldInfo worldInfo, SWIGTYPE_p_btVector3 vertices, int nvertices, bool randomizeConstraints) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreateFromConvexHull__SWIG_0(btSoftBodyWorldInfo.getCPtr(worldInfo), SWIGTYPE_p_btVector3.getCPtr(vertices), nvertices, randomizeConstraints);
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static btSoftBody CreateFromConvexHull(btSoftBodyWorldInfo worldInfo, SWIGTYPE_p_btVector3 vertices, int nvertices) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreateFromConvexHull__SWIG_1(btSoftBodyWorldInfo.getCPtr(worldInfo), SWIGTYPE_p_btVector3.getCPtr(vertices), nvertices);
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static btSoftBody CreateFromConvexHull(btSoftBodyWorldInfo worldInfo, btAlignedObjectArrayVector3 vertices, bool randomizeConstraints) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreateFromConvexHull__SWIG_2(btSoftBodyWorldInfo.getCPtr(worldInfo), btAlignedObjectArrayVector3.getCPtr(vertices), randomizeConstraints);
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static btSoftBody CreateFromConvexHull(btSoftBodyWorldInfo worldInfo, btAlignedObjectArrayVector3 vertices) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreateFromConvexHull__SWIG_3(btSoftBodyWorldInfo.getCPtr(worldInfo), btAlignedObjectArrayVector3.getCPtr(vertices));
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static btSoftBody CreateFromTetGenData(btSoftBodyWorldInfo worldInfo, string ele, string face, string node, bool bfacelinks, bool btetralinks, bool bfacesfromtetras) {
    IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyHelpers_CreateFromTetGenData(btSoftBodyWorldInfo.getCPtr(worldInfo), ele, face, node, bfacelinks, btetralinks, bfacesfromtetras);
    btSoftBody ret = (cPtr == IntPtr.Zero) ? null : new btSoftBody(cPtr, false);
    if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public btSoftBodyHelpers() : this(BulletSoftBodyPINVOKE.new_btSoftBodyHelpers(), true) {
  }

}

}
