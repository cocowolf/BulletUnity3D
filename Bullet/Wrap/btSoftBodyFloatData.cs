/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btSoftBodyFloatData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btSoftBodyFloatData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(btSoftBodyFloatData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btSoftBodyFloatData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletSoftBodyPINVOKE.delete_btSoftBodyFloatData(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_btCollisionObjectFloatData m_collisionObjectData {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_collisionObjectData_set(swigCPtr, SWIGTYPE_p_btCollisionObjectFloatData.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btCollisionObjectFloatData ret = new SWIGTYPE_p_btCollisionObjectFloatData(BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_collisionObjectData_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SoftBodyPoseData m_pose {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_pose_set(swigCPtr, SoftBodyPoseData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_pose_get(swigCPtr);
      SoftBodyPoseData ret = (cPtr == IntPtr.Zero) ? null : new SoftBodyPoseData(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_SoftBodyMaterialData m_materials {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_materials_set(swigCPtr, SWIGTYPE_p_p_SoftBodyMaterialData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_materials_get(swigCPtr);
      SWIGTYPE_p_p_SoftBodyMaterialData ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_SoftBodyMaterialData(cPtr, false);
      return ret;
    } 
  }

  public SoftBodyNodeData m_nodes {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_nodes_set(swigCPtr, SoftBodyNodeData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_nodes_get(swigCPtr);
      SoftBodyNodeData ret = (cPtr == IntPtr.Zero) ? null : new SoftBodyNodeData(cPtr, false);
      return ret;
    } 
  }

  public SoftBodyLinkData m_links {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_links_set(swigCPtr, SoftBodyLinkData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_links_get(swigCPtr);
      SoftBodyLinkData ret = (cPtr == IntPtr.Zero) ? null : new SoftBodyLinkData(cPtr, false);
      return ret;
    } 
  }

  public SoftBodyFaceData m_faces {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_faces_set(swigCPtr, SoftBodyFaceData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_faces_get(swigCPtr);
      SoftBodyFaceData ret = (cPtr == IntPtr.Zero) ? null : new SoftBodyFaceData(cPtr, false);
      return ret;
    } 
  }

  public SoftBodyTetraData m_tetrahedra {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_tetrahedra_set(swigCPtr, SoftBodyTetraData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_tetrahedra_get(swigCPtr);
      SoftBodyTetraData ret = (cPtr == IntPtr.Zero) ? null : new SoftBodyTetraData(cPtr, false);
      return ret;
    } 
  }

  public SoftRigidAnchorData m_anchors {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_anchors_set(swigCPtr, SoftRigidAnchorData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_anchors_get(swigCPtr);
      SoftRigidAnchorData ret = (cPtr == IntPtr.Zero) ? null : new SoftRigidAnchorData(cPtr, false);
      return ret;
    } 
  }

  public SoftBodyClusterData m_clusters {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_clusters_set(swigCPtr, SoftBodyClusterData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_clusters_get(swigCPtr);
      SoftBodyClusterData ret = (cPtr == IntPtr.Zero) ? null : new SoftBodyClusterData(cPtr, false);
      return ret;
    } 
  }

  public btSoftBodyJointData m_joints {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_joints_set(swigCPtr, btSoftBodyJointData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_joints_get(swigCPtr);
      btSoftBodyJointData ret = (cPtr == IntPtr.Zero) ? null : new btSoftBodyJointData(cPtr, false);
      return ret;
    } 
  }

  public int m_numMaterials {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numMaterials_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numMaterials_get(swigCPtr);
      return ret;
    } 
  }

  public int m_numNodes {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numNodes_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numNodes_get(swigCPtr);
      return ret;
    } 
  }

  public int m_numLinks {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numLinks_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numLinks_get(swigCPtr);
      return ret;
    } 
  }

  public int m_numFaces {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numFaces_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numFaces_get(swigCPtr);
      return ret;
    } 
  }

  public int m_numTetrahedra {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numTetrahedra_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numTetrahedra_get(swigCPtr);
      return ret;
    } 
  }

  public int m_numAnchors {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numAnchors_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numAnchors_get(swigCPtr);
      return ret;
    } 
  }

  public int m_numClusters {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numClusters_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numClusters_get(swigCPtr);
      return ret;
    } 
  }

  public int m_numJoints {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numJoints_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_numJoints_get(swigCPtr);
      return ret;
    } 
  }

  public SoftBodyConfigData m_config {
    set {
      BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_config_set(swigCPtr, SoftBodyConfigData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.btSoftBodyFloatData_m_config_get(swigCPtr);
      SoftBodyConfigData ret = (cPtr == IntPtr.Zero) ? null : new SoftBodyConfigData(cPtr, false);
      return ret;
    } 
  }

  public btSoftBodyFloatData() : this(BulletSoftBodyPINVOKE.new_btSoftBodyFloatData(), true) {
  }

}

}
