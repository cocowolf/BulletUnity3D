/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btVertexBufferDescriptor : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btVertexBufferDescriptor(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(btVertexBufferDescriptor obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btVertexBufferDescriptor() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletSoftBodyPINVOKE.delete_btVertexBufferDescriptor(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public virtual bool hasVertexPositions() {
    bool ret = BulletSoftBodyPINVOKE.btVertexBufferDescriptor_hasVertexPositions(swigCPtr);
    return ret;
  }

  public virtual bool hasNormals() {
    bool ret = BulletSoftBodyPINVOKE.btVertexBufferDescriptor_hasNormals(swigCPtr);
    return ret;
  }

  public virtual btVertexBufferDescriptor.BufferTypes getBufferType() {
    btVertexBufferDescriptor.BufferTypes ret = (btVertexBufferDescriptor.BufferTypes)BulletSoftBodyPINVOKE.btVertexBufferDescriptor_getBufferType(swigCPtr);
    return ret;
  }

  public virtual int getVertexOffset() {
    int ret = BulletSoftBodyPINVOKE.btVertexBufferDescriptor_getVertexOffset(swigCPtr);
    return ret;
  }

  public virtual int getVertexStride() {
    int ret = BulletSoftBodyPINVOKE.btVertexBufferDescriptor_getVertexStride(swigCPtr);
    return ret;
  }

  public virtual int getNormalOffset() {
    int ret = BulletSoftBodyPINVOKE.btVertexBufferDescriptor_getNormalOffset(swigCPtr);
    return ret;
  }

  public virtual int getNormalStride() {
    int ret = BulletSoftBodyPINVOKE.btVertexBufferDescriptor_getNormalStride(swigCPtr);
    return ret;
  }

  public enum BufferTypes {
    CPU_BUFFER,
    DX11_BUFFER,
    OPENGL_BUFFER
  }

}

}
