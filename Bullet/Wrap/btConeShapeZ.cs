/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class btConeShapeZ : btConeShape {
  private HandleRef swigCPtr;

  internal btConeShapeZ(IntPtr cPtr, bool cMemoryOwn) : base(BulletCollisionPINVOKE.btConeShapeZ_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(btConeShapeZ obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~btConeShapeZ() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletCollisionPINVOKE.delete_btConeShapeZ(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btConeShapeZ(float radius, float height) : this(BulletCollisionPINVOKE.new_btConeShapeZ(radius, height), true) {
  }

  public override SWIGTYPE_p_btVector3 getAnisotropicRollingFrictionDirection() {
    SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletCollisionPINVOKE.btConeShapeZ_getAnisotropicRollingFrictionDirection(swigCPtr), true);
    return ret;
  }

}

}
