/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class SoftBodyNodeData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SoftBodyNodeData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SoftBodyNodeData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SoftBodyNodeData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletSoftBodyPINVOKE.delete_SoftBodyNodeData(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SoftBodyMaterialData m_material {
    set {
      BulletSoftBodyPINVOKE.SoftBodyNodeData_m_material_set(swigCPtr, SoftBodyMaterialData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.SoftBodyNodeData_m_material_get(swigCPtr);
      SoftBodyMaterialData ret = (cPtr == IntPtr.Zero) ? null : new SoftBodyMaterialData(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3FloatData m_position {
    set {
      BulletSoftBodyPINVOKE.SoftBodyNodeData_m_position_set(swigCPtr, SWIGTYPE_p_btVector3FloatData.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3FloatData ret = new SWIGTYPE_p_btVector3FloatData(BulletSoftBodyPINVOKE.SoftBodyNodeData_m_position_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3FloatData m_previousPosition {
    set {
      BulletSoftBodyPINVOKE.SoftBodyNodeData_m_previousPosition_set(swigCPtr, SWIGTYPE_p_btVector3FloatData.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3FloatData ret = new SWIGTYPE_p_btVector3FloatData(BulletSoftBodyPINVOKE.SoftBodyNodeData_m_previousPosition_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3FloatData m_velocity {
    set {
      BulletSoftBodyPINVOKE.SoftBodyNodeData_m_velocity_set(swigCPtr, SWIGTYPE_p_btVector3FloatData.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3FloatData ret = new SWIGTYPE_p_btVector3FloatData(BulletSoftBodyPINVOKE.SoftBodyNodeData_m_velocity_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3FloatData m_accumulatedForce {
    set {
      BulletSoftBodyPINVOKE.SoftBodyNodeData_m_accumulatedForce_set(swigCPtr, SWIGTYPE_p_btVector3FloatData.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3FloatData ret = new SWIGTYPE_p_btVector3FloatData(BulletSoftBodyPINVOKE.SoftBodyNodeData_m_accumulatedForce_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3FloatData m_normal {
    set {
      BulletSoftBodyPINVOKE.SoftBodyNodeData_m_normal_set(swigCPtr, SWIGTYPE_p_btVector3FloatData.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3FloatData ret = new SWIGTYPE_p_btVector3FloatData(BulletSoftBodyPINVOKE.SoftBodyNodeData_m_normal_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float m_inverseMass {
    set {
      BulletSoftBodyPINVOKE.SoftBodyNodeData_m_inverseMass_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyNodeData_m_inverseMass_get(swigCPtr);
      return ret;
    } 
  }

  public float m_area {
    set {
      BulletSoftBodyPINVOKE.SoftBodyNodeData_m_area_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SoftBodyNodeData_m_area_get(swigCPtr);
      return ret;
    } 
  }

  public int m_attach {
    set {
      BulletSoftBodyPINVOKE.SoftBodyNodeData_m_attach_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.SoftBodyNodeData_m_attach_get(swigCPtr);
      return ret;
    } 
  }

  public int m_pad {
    set {
      BulletSoftBodyPINVOKE.SoftBodyNodeData_m_pad_set(swigCPtr, value);
    } 
    get {
      int ret = BulletSoftBodyPINVOKE.SoftBodyNodeData_m_pad_get(swigCPtr);
      return ret;
    } 
  }

  public SoftBodyNodeData() : this(BulletSoftBodyPINVOKE.new_SoftBodyNodeData(), true) {
  }

}

}
