/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BulletCSharp {

using System;
using System.Runtime.InteropServices;

public class SBJoint : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SBJoint(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SBJoint obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SBJoint() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletSoftBodyPINVOKE.delete_SBJoint(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public Body m_bodies {
    set {
      BulletSoftBodyPINVOKE.SBJoint_m_bodies_set(swigCPtr, Body.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.SBJoint_m_bodies_get(swigCPtr);
      Body ret = (cPtr == IntPtr.Zero) ? null : new Body(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3 m_refs {
    set {
      BulletSoftBodyPINVOKE.SBJoint_m_refs_set(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(value));
    } 
    get {
      IntPtr cPtr = BulletSoftBodyPINVOKE.SBJoint_m_refs_get(swigCPtr);
      SWIGTYPE_p_btVector3 ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_btVector3(cPtr, false);
      return ret;
    } 
  }

  public float m_cfm {
    set {
      BulletSoftBodyPINVOKE.SBJoint_m_cfm_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SBJoint_m_cfm_get(swigCPtr);
      return ret;
    } 
  }

  public float m_erp {
    set {
      BulletSoftBodyPINVOKE.SBJoint_m_erp_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SBJoint_m_erp_get(swigCPtr);
      return ret;
    } 
  }

  public float m_split {
    set {
      BulletSoftBodyPINVOKE.SBJoint_m_split_set(swigCPtr, value);
    } 
    get {
      float ret = BulletSoftBodyPINVOKE.SBJoint_m_split_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3 m_drift {
    set {
      BulletSoftBodyPINVOKE.SBJoint_m_drift_set(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.SBJoint_m_drift_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btVector3 m_sdrift {
    set {
      BulletSoftBodyPINVOKE.SBJoint_m_sdrift_set(swigCPtr, SWIGTYPE_p_btVector3.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btVector3 ret = new SWIGTYPE_p_btVector3(BulletSoftBodyPINVOKE.SBJoint_m_sdrift_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_btMatrix3x3 m_massmatrix {
    set {
      BulletSoftBodyPINVOKE.SBJoint_m_massmatrix_set(swigCPtr, SWIGTYPE_p_btMatrix3x3.getCPtr(value));
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btMatrix3x3 ret = new SWIGTYPE_p_btMatrix3x3(BulletSoftBodyPINVOKE.SBJoint_m_massmatrix_get(swigCPtr), true);
      if (BulletSoftBodyPINVOKE.SWIGPendingException.Pending) throw BulletSoftBodyPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool m_delete {
    set {
      BulletSoftBodyPINVOKE.SBJoint_m_delete_set(swigCPtr, value);
    } 
    get {
      bool ret = BulletSoftBodyPINVOKE.SBJoint_m_delete_get(swigCPtr);
      return ret;
    } 
  }

  public virtual void Prepare(float dt, int iterations) {
    BulletSoftBodyPINVOKE.SBJoint_Prepare(swigCPtr, dt, iterations);
  }

  public virtual void Solve(float dt, float sor) {
    BulletSoftBodyPINVOKE.SBJoint_Solve(swigCPtr, dt, sor);
  }

  public virtual void Terminate(float dt) {
    BulletSoftBodyPINVOKE.SBJoint_Terminate(swigCPtr, dt);
  }

  public virtual SWIGTYPE_p_SBJoint__eType___ Type() {
    SWIGTYPE_p_SBJoint__eType___ ret = new SWIGTYPE_p_SBJoint__eType___(BulletSoftBodyPINVOKE.SBJoint_Type(swigCPtr), true);
    return ret;
  }

}

}
